// Generated by psc version 0.6.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $dot$bar$dot = function (dict) {
        return dict[".|."];
    };
    var $dot$up$dot = function (dict) {
        return dict[".^."];
    };
    var $dot$amp$dot = function (dict) {
        return dict[".&."];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_37) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_45) {
        if (_45 instanceof LT) {
            return "LT";
        };
        if (_45 instanceof GT) {
            return "GT";
        };
        if (_45 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_38) {
        if (_38) {
            return "true";
        };
        if (!_38) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_52) {
        return function (_53) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_4) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_41) {
        return function (_42) {
            return false;
        };
    }, function (_39) {
        return function (_40) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_46) {
        return function (_47) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_48) {
        return function (_49) {
            if (!_48 && !_49) {
                return EQ.value;
            };
            if (!_48 && _49) {
                return LT.value;
            };
            if (_48 && _49) {
                return EQ.value;
            };
            if (_48 && !_49) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_33) {
        return function (_34) {
            return _33;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _428 = compare(__dict_Ord_11)(a1)(a2);
                if (_428 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _429 = compare(__dict_Ord_12)(a1)(a2);
                if (_429 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _430 = compare(__dict_Ord_13)(a1)(a2);
                if (_430 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _431 = compare(__dict_Ord_14)(a1)(a2);
                if (_431 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_10) {
        return new Ord(function () {
            return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
        }, function (_50) {
            return function (_51) {
                if (_50.length === 0 && _51.length === 0) {
                    return EQ.value;
                };
                if (_50.length === 0) {
                    return LT.value;
                };
                if (_51.length === 0) {
                    return GT.value;
                };
                if (_50.length >= 1) {
                    var _438 = _50.slice(1);
                    if (_51.length >= 1) {
                        var _436 = _51.slice(1);
                        var _434 = compare(__dict_Ord_10)(_50[0])(_51[0]);
                        if (_434 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_10))(_438)(_436);
                        };
                        return _434;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_43) {
        return function (_44) {
            if (_43 instanceof LT && _44 instanceof LT) {
                return true;
            };
            if (_43 instanceof GT && _44 instanceof GT) {
                return true;
            };
            if (_43 instanceof EQ && _44 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var asTypeOf = function (_35) {
        return function (_36) {
            return _35;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "#": $hash, 
        "$": $dollar, 
        "%": $percent, 
        "&&": $amp$amp, 
        "*": $times, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        ".&.": $dot$amp$dot, 
        ".^.": $dot$up$dot, 
        ".|.": $dot$bar$dot, 
        "/": $div, 
        "/=": $div$eq, 
        ":": $colon, 
        "<": $less, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<<<": $less$less$less, 
        "<=": $less$eq, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">": $greater, 
        ">=": $greater$eq, 
        ">>=": $greater$greater$eq, 
        ">>>": $greater$greater$greater, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        Bits: Bits, 
        BoolLike: BoolLike, 
        Category: Category, 
        EQ: EQ, 
        Eq: Eq, 
        Functor: Functor, 
        GT: GT, 
        LT: LT, 
        Monad: Monad, 
        Num: Num, 
        Ord: Ord, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        ap: ap, 
        applicativeArr: applicativeArr, 
        applyArr: applyArr, 
        asTypeOf: asTypeOf, 
        bindArr: bindArr, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        categoryArr: categoryArr, 
        compare: compare, 
        complement: complement, 
        cons: cons, 
        "const": $$const, 
        eqArray: eqArray, 
        eqBoolean: eqBoolean, 
        eqNumber: eqNumber, 
        eqOrdering: eqOrdering, 
        eqString: eqString, 
        eqUnit: eqUnit, 
        flip: flip, 
        functorArr: functorArr, 
        id: id, 
        liftA1: liftA1, 
        liftM1: liftM1, 
        monadArr: monadArr, 
        negate: negate, 
        not: not, 
        numNumber: numNumber, 
        ordArray: ordArray, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordUnit: ordUnit, 
        otherwise: otherwise, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupArr: semigroupArr, 
        semigroupString: semigroupString, 
        semigroupUnit: semigroupUnit, 
        semigroupoidArr: semigroupoidArr, 
        shl: shl, 
        show: show, 
        showArray: showArray, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showOrdering: showOrdering, 
        showString: showString, 
        showUnit: showUnit, 
        shr: shr, 
        unit: unit, 
        "void": $$void, 
        zshr: zshr, 
        "||": $bar$bar
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        abs: abs, 
        acos: acos, 
        asin: asin, 
        atan: atan, 
        atan2: atan2, 
        ceil: ceil, 
        cos: cos, 
        e: e, 
        exp: exp, 
        floor: floor, 
        ln10: ln10, 
        ln2: ln2, 
        log: log, 
        log10e: log10e, 
        log2e: log2e, 
        max: max, 
        min: min, 
        pi: pi, 
        pow: pow, 
        round: round, 
        sin: sin, 
        sqrt: sqrt, 
        sqrt1_2: sqrt1_2, 
        sqrt2: sqrt2, 
        tan: tan
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        mkFn0: mkFn0, 
        mkFn1: mkFn1, 
        mkFn10: mkFn10, 
        mkFn2: mkFn2, 
        mkFn3: mkFn3, 
        mkFn4: mkFn4, 
        mkFn5: mkFn5, 
        mkFn6: mkFn6, 
        mkFn7: mkFn7, 
        mkFn8: mkFn8, 
        mkFn9: mkFn9, 
        on: on, 
        runFn0: runFn0, 
        runFn1: runFn1, 
        runFn10: runFn10, 
        runFn2: runFn2, 
        runFn3: runFn3, 
        runFn4: runFn4, 
        runFn5: runFn5, 
        runFn6: runFn6, 
        runFn7: runFn7, 
        runFn8: runFn8, 
        runFn9: runFn9
    };
})();
var PS = PS || {};
PS.Data_Exists = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkExists(fa) {  return fa;};
    function runExists(f) {  return function(fa) {    return f(fa);  };};
    return {
        mkExists: mkExists, 
        runExists: runExists
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = {
        create: function (value) {
            return value;
        }
    };
    var liftRef = function (_54) {
        return function (_55) {
            return function (_56) {
                return _54(_55)(_56);
            };
        };
    };
    var functorRef = new Prelude.Functor(function (_57) {
        return function (_58) {
            return _57(_58);
        };
    });
    var eqRef = new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    return {
        Ref: Ref, 
        eqRef: eqRef, 
        functorRef: functorRef, 
        liftRef: liftRef
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function MonadTrans(lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Error(noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = new Error("", Prelude.id(Prelude.categoryArr));
    return {
        Error: Error, 
        errorString: errorString, 
        noMsg: noMsg, 
        strMsg: strMsg
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        forE: forE, 
        foreachE: foreachE, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE, 
        runPure: runPure, 
        untilE: untilE, 
        whileE: whileE
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function runST(f) {  return f;};
    return {
        modifySTRef: modifySTRef, 
        newSTRef: newSTRef, 
        readSTRef: readSTRef, 
        runST: runST, 
        writeSTRef: writeSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_16) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_16)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Graphics_Canvas = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function Round() {

    };
    Round.value = new Round();
    function Square() {

    };
    Square.value = new Square();
    function Butt() {

    };
    Butt.value = new Butt();
    function SourceOver() {

    };
    SourceOver.value = new SourceOver();
    function SourceIn() {

    };
    SourceIn.value = new SourceIn();
    function SourceOut() {

    };
    SourceOut.value = new SourceOut();
    function SourceAtop() {

    };
    SourceAtop.value = new SourceAtop();
    function DestinationOver() {

    };
    DestinationOver.value = new DestinationOver();
    function DestinationIn() {

    };
    DestinationIn.value = new DestinationIn();
    function DestinationOut() {

    };
    DestinationOut.value = new DestinationOut();
    function DestinationAtop() {

    };
    DestinationAtop.value = new DestinationAtop();
    function Lighter() {

    };
    Lighter.value = new Lighter();
    function Copy() {

    };
    Copy.value = new Copy();
    function Xor() {

    };
    Xor.value = new Xor();
    function getCanvasElementById(id) {  return function() {    return document.getElementById(id);  };};
    function getContext2D(c) {  return function() {    return c.getContext('2d');  };};
    function getCanvasWidth(canvas){  return function(){    return canvas.width;  };};;
    function getCanvasHeight(canvas){  return function(){    return canvas.height;  };};;
    function setCanvasWidth(width){   return function(canvas){      return function(){        canvas.width = width;        return canvas;      };    };};;
    function setCanvasHeight(height){   return function(canvas){      return function(){         canvas.height = height;         return canvas;       };    };};;
    function canvasToDataURL(canvas) {   return function(){     return canvas.toDataURL();   };};;
    function setLineWidth(width) {  return function(ctx) {    return function() {      ctx.lineWidth = width;      return ctx;    };  };};
    function setFillStyle(style) {  return function(ctx) {    return function() {      ctx.fillStyle = style;      return ctx;    };  };};
    function setStrokeStyle(style) {  return function(ctx) {    return function() {      ctx.strokeStyle = style;      return ctx;    };  };};
    function setShadowColor(color) {  return function(ctx) {    return function() {      ctx.shadowColor = color;      return ctx;    };  };};
    function setShadowBlur(blur) {  return function(ctx) {    return function() {      ctx.shadowBlur = blur;      return ctx;    };  };};
    function setShadowOffsetX(offsetX) {  return function(ctx) {    return function() {      ctx.shadowOffsetX = offsetX;      return ctx;    };  };};
    function setShadowOffsetY(offsetY) {  return function(ctx) {    return function() {      ctx.shadowOffsetY = offsetY;      return ctx;    };  };};
    function setLineCapImpl(cap){  return function(ctx) {    return function() {      ctx.lineCap = cap;      return ctx;    };  };};
    function setGlobalCompositeOperationImpl(ctx) {  return function(op) {    return function() {      ctx.globalCompositeOperation = op;      return ctx;    };  };};
    function setGlobalAlpha(ctx) {  return function(alpha) {    return function() {      ctx.setGlobalAlpha = alpha;      return ctx;    };  };};
    function beginPath(ctx) {  return function() {    ctx.beginPath();    return ctx;  };};
    function stroke(ctx) {  return function() {    ctx.stroke();    return ctx;  };};
    function fill(ctx) {  return function() {    ctx.fill();    return ctx;  };};
    function clip(ctx) {  return function() {    ctx.clip();    return ctx;  };};
    function lineTo(ctx) {  return function(x) {    return function(y) {      return function() {        ctx.lineTo(x, y);        return ctx;      };    };  };};
    function moveTo(ctx) {  return function(x) {    return function(y) {      return function() {        ctx.moveTo(x, y);        return ctx;      };    };  };};
    function closePath(ctx) {  return function() {    ctx.closePath();    return ctx;  };};
    function arc(ctx) {  return function(a) {    return function() {      ctx.arc(a.x, a.y, a.r, a.start, a.end);      return ctx;    };  };};
    function rect(ctx) {  return function(r) {    return function() {      ctx.rect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function fillRect(ctx) {  return function(r) {    return function() {      ctx.fillRect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function strokeRect(ctx) {  return function(r) {    return function() {      ctx.strokeRect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function clearRect(ctx) {  return function(r) {    return function() {      ctx.clearRect(r.x, r.y, r.w, r.h);      return ctx;    };  };};
    function scale(t) {  return function(ctx) {    return function() {      ctx.scale(t.scaleX, t.scaleY);      return ctx;    };  };};
    function rotate(angle) {  return function(ctx) {    return function() {      ctx.rotate(angle);      return ctx;    };  };};
    function translate(t) {  return function(ctx) {    return function() {      ctx.translate(t.translateX, t.translateY);      return ctx;    };  };};
    function transform(t) {  return function(ctx) {    return function() {      ctx.transform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);      return ctx;    };  };};
    function font(ctx) {  return function() {    return ctx.font;  };};
    function setFont(fontspec) {  return function(ctx) {    return function() {      ctx.font = fontspec;      return ctx;    };  };};
    function fillText(ctx) {  return function(text) {    return function(x) {      return function(y) {        return function() {          ctx.fillText(text, x, y);          return ctx;        };      };    };  };};
    function strokeText(ctx) {  return function(text) {    return function(x) {      return function(y) {        return function() {          ctx.fillText(text, x, y);          return ctx;        };      };    };  };};
    function measureText(ctx) {  return function(text) {    return function() {      return ctx.measureText(text);    };  };};
    function save(ctx) {  return function() {    ctx.save();    return ctx;  };};
    function restore(ctx) {  return function() {    ctx.restore();    return ctx;  };};
    function getImageData(ctx) {  return function(x) {    return function(y) {      return function(w) {        return function(h) {          return function() { return ctx.getImageData(x, y, w, h); };        };      };    };  };};
    function putImageDataFull(ctx) {  return function(image_data) {    return function(x) {      return function(y) {        return function(dx) {          return function(dy) {            return function(dw) {              return function(dh) {                return function() {                  ctx.putImageData(image_data, x, y, dx, dy, dw, dh);                  return ctx;                };              };            };          };        };      };    };  };};
    function putImageData(ctx) {  return function(image_data) {    return function(x) {      return function(y) {        return function() {          ctx.putImageData(image_data, x, y);          return ctx;        };      };    };  };};
    function createImageData(ctx) {  return function(sw) {    return function(sh) {      return function() {        return ctx.createImageData(sw, sh);      };    };  };};
    function createImageDataCopy(ctx) {  return function(image_data) {    return function() {      return ctx.createImageData(image_data);    };  };};
    function getImageDataWidth(image_data) {  return function() {    return image_data.width;  };};
    function getImageDataHeight(image_data) {  return function() {    return image_data.height;  };};
    function getImageDataPixelArray(image_data) {  return function() {    return image_data.data;  };};
    var withContext = function (ctx) {
        return function (action) {
            return function __do() {
                save(ctx)();
                var _7 = action();
                restore(ctx)();
                return _7;
            };
        };
    };
    var strokePath = function (ctx) {
        return function (path) {
            return function __do() {
                beginPath(ctx)();
                var _5 = path();
                stroke(ctx)();
                return _5;
            };
        };
    };
    var showComposite = new Prelude.Show(function (_60) {
        if (_60 instanceof SourceOver) {
            return "source-over";
        };
        if (_60 instanceof SourceIn) {
            return "source-in";
        };
        if (_60 instanceof SourceOut) {
            return "source-out";
        };
        if (_60 instanceof SourceAtop) {
            return "source-atop";
        };
        if (_60 instanceof DestinationOver) {
            return "destination-over";
        };
        if (_60 instanceof DestinationIn) {
            return "destination-in";
        };
        if (_60 instanceof DestinationOut) {
            return "destination-out";
        };
        if (_60 instanceof DestinationAtop) {
            return "destination-atop";
        };
        if (_60 instanceof Lighter) {
            return "lighter";
        };
        if (_60 instanceof Copy) {
            return "copy";
        };
        if (_60 instanceof Xor) {
            return "xor";
        };
        throw new Error("Failed pattern match");
    });
    var setLineCap = function (_59) {
        if (_59 instanceof Round) {
            return setLineCapImpl("round");
        };
        if (_59 instanceof Square) {
            return setLineCapImpl("square");
        };
        if (_59 instanceof Butt) {
            return setLineCapImpl("butt");
        };
        throw new Error("Failed pattern match");
    };
    var setGlobalCompositeOperation = function (ctx) {
        return function (composite) {
            return setGlobalCompositeOperationImpl(ctx)(Prelude.show(showComposite)(composite));
        };
    };
    var setCanvasDimensions = function (d) {
        return function (ce) {
            return Prelude[">>="](Control_Monad_Eff.bindEff)(setCanvasHeight(d.height)(ce))(setCanvasWidth(d.width));
        };
    };
    var getCanvasDimensions = function (ce) {
        return function __do() {
            var _4 = getCanvasWidth(ce)();
            var _3 = getCanvasHeight(ce)();
            return {
                width: _4, 
                height: _3
            };
        };
    };
    var fillPath = function (ctx) {
        return function (path) {
            return function __do() {
                beginPath(ctx)();
                var _6 = path();
                fill(ctx)();
                return _6;
            };
        };
    };
    return {
        Butt: Butt, 
        Copy: Copy, 
        DestinationAtop: DestinationAtop, 
        DestinationIn: DestinationIn, 
        DestinationOut: DestinationOut, 
        DestinationOver: DestinationOver, 
        Lighter: Lighter, 
        Round: Round, 
        SourceAtop: SourceAtop, 
        SourceIn: SourceIn, 
        SourceOut: SourceOut, 
        SourceOver: SourceOver, 
        Square: Square, 
        Xor: Xor, 
        arc: arc, 
        beginPath: beginPath, 
        canvasToDataURL: canvasToDataURL, 
        clearRect: clearRect, 
        clip: clip, 
        closePath: closePath, 
        createImageData: createImageData, 
        createImageDataCopy: createImageDataCopy, 
        fill: fill, 
        fillPath: fillPath, 
        fillRect: fillRect, 
        fillText: fillText, 
        font: font, 
        getCanvasDimensions: getCanvasDimensions, 
        getCanvasElementById: getCanvasElementById, 
        getCanvasHeight: getCanvasHeight, 
        getCanvasWidth: getCanvasWidth, 
        getContext2D: getContext2D, 
        getImageData: getImageData, 
        getImageDataHeight: getImageDataHeight, 
        getImageDataPixelArray: getImageDataPixelArray, 
        getImageDataWidth: getImageDataWidth, 
        lineTo: lineTo, 
        measureText: measureText, 
        moveTo: moveTo, 
        putImageData: putImageData, 
        putImageDataFull: putImageDataFull, 
        rect: rect, 
        restore: restore, 
        rotate: rotate, 
        save: save, 
        scale: scale, 
        setCanvasDimensions: setCanvasDimensions, 
        setCanvasHeight: setCanvasHeight, 
        setCanvasWidth: setCanvasWidth, 
        setFillStyle: setFillStyle, 
        setFont: setFont, 
        setGlobalAlpha: setGlobalAlpha, 
        setGlobalCompositeOperation: setGlobalCompositeOperation, 
        setGlobalCompositeOperationImpl: setGlobalCompositeOperationImpl, 
        setLineCap: setLineCap, 
        setLineCapImpl: setLineCapImpl, 
        setLineWidth: setLineWidth, 
        setShadowBlur: setShadowBlur, 
        setShadowColor: setShadowColor, 
        setShadowOffsetX: setShadowOffsetX, 
        setShadowOffsetY: setShadowOffsetY, 
        setStrokeStyle: setStrokeStyle, 
        showComposite: showComposite, 
        stroke: stroke, 
        strokePath: strokePath, 
        strokeRect: strokeRect, 
        strokeText: strokeText, 
        transform: transform, 
        translate: translate, 
        withContext: withContext
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = {
        create: function (value) {
            return value;
        }
    };
    var runContT = function (_61) {
        return function (_62) {
            return _61(_62);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_17) {
        return function (m) {
            return function (k) {
                return Prelude[">>="](__dict_Monad_17["__superclass_Prelude.Bind_1"]())(m)(k);
            };
        };
    });
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_19) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var applyContT = function (__dict_Functor_21) {
        return function (__dict_Monad_22) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_22);
            });
        };
    };
    var bindContT = function (__dict_Monad_20) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return applyContT(((__dict_Monad_20["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_20);
        });
    };
    var applicativeContT = function (__dict_Functor_23) {
        return function (__dict_Monad_24) {
            return new Prelude.Applicative(function () {
                return applyContT(__dict_Functor_23)(__dict_Monad_24);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_18) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_18["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_18);
        }, function () {
            return bindContT(__dict_Monad_18);
        });
    };
    return {
        ContT: ContT, 
        applicativeContT: applicativeContT, 
        applyContT: applyContT, 
        bindContT: bindContT, 
        callCC: callCC, 
        functorContT: functorContT, 
        mapContT: mapContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT, 
        runContT: runContT, 
        withContT: withContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_25) {
        return function (_68) {
            return function (_69) {
                if (_68) {
                    return _69;
                };
                if (!_68) {
                    return Prelude["return"](__dict_Monad_25)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_26) {
        return function (_70) {
            return function (_71) {
                if (!_70) {
                    return _71;
                };
                if (_70) {
                    return Prelude["return"](__dict_Monad_26)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_27) {
        return function (_63) {
            return function (_64) {
                if (_63 === 0) {
                    return Prelude["return"](__dict_Monad_27)([  ]);
                };
                return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(_64)(function (_9) {
                    return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_27)(_63 - 1)(_64))(function (_8) {
                        return Prelude["return"](__dict_Monad_27)(Prelude[":"](_9)(_8));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_28) {
        return function (_65) {
            return function (_66) {
                return function (_67) {
                    if (_67.length === 0) {
                        return Prelude["return"](__dict_Monad_28)(_66);
                    };
                    if (_67.length >= 1) {
                        var _471 = _67.slice(1);
                        return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(_65(_66)(_67[0]))(function (a$prime) {
                            return foldM(__dict_Monad_28)(_65)(a$prime)(_471);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        foldM: foldM, 
        replicateM: replicateM, 
        unless: unless, 
        when: when
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy(defer) {
        this.defer = defer;
    };
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    function Lazy2(defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_29) {
        return function (f) {
            return defer2(__dict_Lazy2_29)(function (_) {
                return f(fix2(__dict_Lazy2_29)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_30) {
        return function (f) {
            return defer1(__dict_Lazy1_30)(function (_) {
                return f(fix1(__dict_Lazy1_30)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_31) {
        return function (f) {
            return defer(__dict_Lazy_31)(function (_) {
                return f(fix(__dict_Lazy_31)(f));
            });
        };
    };
    return {
        Lazy: Lazy, 
        Lazy1: Lazy1, 
        Lazy2: Lazy2, 
        defer: defer, 
        defer1: defer1, 
        defer2: defer2, 
        fix: fix, 
        fix1: fix1, 
        fix2: fix2
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_32) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_32)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_33) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_33)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_34) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_34)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_35) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_35)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_36) {
        return function (w) {
            return $less$less$eq(__dict_Extend_36)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        "<<=": $less$less$eq, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        Extend: Extend, 
        duplicate: duplicate, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Comonad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function ComonadTrans(lower) {
        this.lower = lower;
    };
    var lower = function (dict) {
        return dict.lower;
    };
    return {
        ComonadTrans: ComonadTrans, 
        lower: lower
    };
})();
var PS = PS || {};
PS.Data_Coyoneda = (function () {
    "use strict";
    var Data_Exists = PS.Data_Exists;
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Extend = PS.Control_Extend;
    var CoyonedaF = {
        create: function (value) {
            return value;
        }
    };
    var Coyoneda = {
        create: function (value) {
            return value;
        }
    };
    var lowerCoyoneda = function (__dict_Functor_38) {
        return function (_78) {
            return Data_Exists.runExists(function (_76) {
                return Prelude["<$>"](__dict_Functor_38)(_76.k)(_76.fi);
            })(_78);
        };
    };
    var liftCoyoneda = function (fa) {
        return Coyoneda.create(Data_Exists.mkExists({
            k: Prelude.id(Prelude.categoryArr), 
            fi: fa
        }));
    };
    var monadTransCoyoneda = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_39) {
        return liftCoyoneda;
    });
    var coyoneda = function (k) {
        return function (fi) {
            return Coyoneda.create(Data_Exists.mkExists({
                k: k, 
                fi: fi
            }));
        };
    };
    var functorCoyoneda = new Prelude.Functor(function (_81) {
        return function (_82) {
            return Data_Exists.runExists(function (_72) {
                return coyoneda(Prelude["<<<"](Prelude.semigroupoidArr)(_81)(_72.k))(_72.fi);
            })(_82);
        };
    });
    var extendCoyoneda = function (__dict_Extend_40) {
        return new Control_Extend.Extend(function (_85) {
            return function (_86) {
                return Data_Exists.runExists(function (_74) {
                    return liftCoyoneda(Control_Extend["<<="](__dict_Extend_40)(Prelude["<<<"](Prelude.semigroupoidArr)(_85)(coyoneda(_74.k)))(_74.fi));
                })(_86);
            };
        }, function () {
            return functorCoyoneda;
        });
    };
    var liftCoyonedaT = function (_79) {
        return function (_80) {
            return Data_Exists.runExists(function (_77) {
                return coyoneda(_77.k)(_79(_77.fi));
            })(_80);
        };
    };
    var liftCoyonedaTF = function (__dict_Functor_41) {
        return function (nat) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(lowerCoyoneda(__dict_Functor_41))(liftCoyonedaT(nat));
        };
    };
    var comonadCoyoneda = function (__dict_Comonad_42) {
        return new Control_Comonad.Comonad(function () {
            return extendCoyoneda(__dict_Comonad_42["__superclass_Control.Extend.Extend_0"]());
        }, function (_87) {
            return Data_Exists.runExists(function (_75) {
                return _75.k(Control_Comonad.extract(__dict_Comonad_42)(_75.fi));
            })(_87);
        });
    };
    var applyCoyoneda = function (__dict_Apply_44) {
        return new Prelude.Apply(function (f) {
            return function (g) {
                return liftCoyoneda(Prelude["<*>"](__dict_Apply_44)(lowerCoyoneda(__dict_Apply_44["__superclass_Prelude.Functor_0"]())(f))(lowerCoyoneda(__dict_Apply_44["__superclass_Prelude.Functor_0"]())(g)));
            };
        }, function () {
            return functorCoyoneda;
        });
    };
    var bindCoyoneda = function (__dict_Bind_43) {
        return new Prelude.Bind(function (_83) {
            return function (_84) {
                return liftCoyoneda(Data_Exists.runExists(function (_73) {
                    return Prelude[">>="](__dict_Bind_43)(_73.fi)(Prelude["<<<"](Prelude.semigroupoidArr)(lowerCoyoneda((__dict_Bind_43["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude["<<<"](Prelude.semigroupoidArr)(_84)(_73.k)));
                })(_83));
            };
        }, function () {
            return applyCoyoneda(__dict_Bind_43["__superclass_Prelude.Apply_0"]());
        });
    };
    var applicativeCoyoneda = function (__dict_Applicative_45) {
        return new Prelude.Applicative(function () {
            return applyCoyoneda(__dict_Applicative_45["__superclass_Prelude.Apply_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftCoyoneda)(Prelude.pure(__dict_Applicative_45)));
    };
    var monadCoyoneda = function (__dict_Monad_37) {
        return new Prelude.Monad(function () {
            return applicativeCoyoneda(__dict_Monad_37["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCoyoneda(__dict_Monad_37["__superclass_Prelude.Bind_1"]());
        });
    };
    return {
        Coyoneda: Coyoneda, 
        CoyonedaF: CoyonedaF, 
        applicativeCoyoneda: applicativeCoyoneda, 
        applyCoyoneda: applyCoyoneda, 
        bindCoyoneda: bindCoyoneda, 
        comonadCoyoneda: comonadCoyoneda, 
        coyoneda: coyoneda, 
        extendCoyoneda: extendCoyoneda, 
        functorCoyoneda: functorCoyoneda, 
        liftCoyoneda: liftCoyoneda, 
        liftCoyonedaT: liftCoyonedaT, 
        liftCoyonedaTF: liftCoyonedaTF, 
        lowerCoyoneda: lowerCoyoneda, 
        monadCoyoneda: monadCoyoneda, 
        monadTransCoyoneda: monadTransCoyoneda
    };
})();
var PS = PS || {};
PS.Data_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function defer(thunk) {    if (this instanceof defer) {      this.thunk = thunk;      return this;    } else {      return new defer(thunk);    }}defer.prototype.force = function () {    var value = this.thunk();    delete this.thunk;    this.force = function () {        return value;    };    return value;};;
    function force(l) {  return l.force();};
    var showLazy = function (__dict_Show_46) {
        return new Prelude.Show(function (x) {
            return "Lazy " + Prelude.show(__dict_Show_46)(force(x));
        });
    };
    var lazy1Lazy = new Control_Lazy.Lazy1(function (f) {
        return defer(function (_) {
            return force(f(Prelude.unit));
        });
    });
    var functorLazy = new Prelude.Functor(function (f) {
        return function (l) {
            return defer(function (_) {
                return f(force(l));
            });
        };
    });
    var extendLazy = new Control_Extend.Extend(function (f) {
        return function (x) {
            return defer(function (_) {
                return f(x);
            });
        };
    }, function () {
        return functorLazy;
    });
    var eqLazy = function (__dict_Eq_48) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqLazy(__dict_Eq_48))(x)(y);
            };
        }, function (x) {
            return function (y) {
                return Prelude["=="](__dict_Eq_48)(force(x))(force(y));
            };
        });
    };
    var ordLazy = function (__dict_Ord_47) {
        return new Prelude.Ord(function () {
            return eqLazy(__dict_Ord_47["__superclass_Prelude.Eq_0"]());
        }, function (x) {
            return function (y) {
                return Prelude.compare(__dict_Ord_47)(force(x))(force(y));
            };
        });
    };
    var comonadLazy = new Control_Comonad.Comonad(function () {
        return extendLazy;
    }, force);
    var applyLazy = new Prelude.Apply(function (f) {
        return function (x) {
            return defer(function (_) {
                return force(f)(force(x));
            });
        };
    }, function () {
        return functorLazy;
    });
    var bindLazy = new Prelude.Bind(function (l) {
        return function (f) {
            return defer(function (_) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(force)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(force))(l);
            });
        };
    }, function () {
        return applyLazy;
    });
    var applicativeLazy = new Prelude.Applicative(function () {
        return applyLazy;
    }, function (a) {
        return defer(function (_) {
            return a;
        });
    });
    var monadLazy = new Prelude.Monad(function () {
        return applicativeLazy;
    }, function () {
        return bindLazy;
    });
    return {
        applicativeLazy: applicativeLazy, 
        applyLazy: applyLazy, 
        bindLazy: bindLazy, 
        comonadLazy: comonadLazy, 
        defer: defer, 
        eqLazy: eqLazy, 
        extendLazy: extendLazy, 
        force: force, 
        functorLazy: functorLazy, 
        lazy1Lazy: lazy1Lazy, 
        monadLazy: monadLazy, 
        ordLazy: ordLazy, 
        showLazy: showLazy
    };
})();
var PS = PS || {};
PS.Data_Yoneda = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Yoneda = {
        create: function (value) {
            return value;
        }
    };
    var runYoneda = function (_88) {
        return function (_89) {
            return _88(_89);
        };
    };
    var lowerYoneda = function (_90) {
        return _90(Prelude.id(Prelude.categoryArr));
    };
    var liftYoneda = function (__dict_Functor_50) {
        return function (m) {
            return function (k) {
                return Prelude["<$>"](__dict_Functor_50)(k)(m);
            };
        };
    };
    var monadTransYoneda = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_51) {
        return liftYoneda(((__dict_Monad_51["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    });
    var functorYoneda = new Prelude.Functor(function (f) {
        return function (m) {
            return function (k) {
                return runYoneda(m)(Prelude["<<<"](Prelude.semigroupoidArr)(k)(f));
            };
        };
    });
    var extendYoneda = function (__dict_Extend_52) {
        return new Control_Extend.Extend(function (_95) {
            return function (_96) {
                return function (k) {
                    return Control_Extend["<<="](__dict_Extend_52)(Prelude["<<<"](Prelude.semigroupoidArr)(k)(Prelude["<<<"](Prelude.semigroupoidArr)(_95)(liftYoneda(__dict_Extend_52["__superclass_Prelude.Functor_0"]()))))(_96(Prelude.id(Prelude.categoryArr)));
                };
            };
        }, function () {
            return functorYoneda;
        });
    };
    var comonadYoneda = function (__dict_Comonad_53) {
        return new Control_Comonad.Comonad(function () {
            return extendYoneda(__dict_Comonad_53["__superclass_Control.Extend.Extend_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Comonad.extract(__dict_Comonad_53))(lowerYoneda));
    };
    var applyYoneda = function (__dict_Apply_55) {
        return new Prelude.Apply(function (_91) {
            return function (_92) {
                return function (k) {
                    return Prelude["<*>"](__dict_Apply_55)(_91(Prelude["<<<"](Prelude.semigroupoidArr)(k)))(_92(Prelude.id(Prelude.categoryArr)));
                };
            };
        }, function () {
            return functorYoneda;
        });
    };
    var bindCoyoneda = function (__dict_Bind_54) {
        return new Prelude.Bind(function (_93) {
            return function (_94) {
                return function (k) {
                    return Prelude[">>="](__dict_Bind_54)(_93(Prelude.id(Prelude.categoryArr)))(function (a) {
                        return runYoneda(_94(a))(k);
                    });
                };
            };
        }, function () {
            return applyYoneda(__dict_Bind_54["__superclass_Prelude.Apply_0"]());
        });
    };
    var applicativeYoneda = function (__dict_Applicative_56) {
        return new Prelude.Applicative(function () {
            return applyYoneda(__dict_Applicative_56["__superclass_Prelude.Apply_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftYoneda((__dict_Applicative_56["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_56)));
    };
    var monadYoneda = function (__dict_Monad_49) {
        return new Prelude.Monad(function () {
            return applicativeYoneda(__dict_Monad_49["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCoyoneda(__dict_Monad_49["__superclass_Prelude.Bind_1"]());
        });
    };
    return {
        Yoneda: Yoneda, 
        applicativeYoneda: applicativeYoneda, 
        applyYoneda: applyYoneda, 
        bindCoyoneda: bindCoyoneda, 
        comonadYoneda: comonadYoneda, 
        extendYoneda: extendYoneda, 
        functorYoneda: functorYoneda, 
        liftYoneda: liftYoneda, 
        lowerYoneda: lowerYoneda, 
        monadTransYoneda: monadTransYoneda, 
        monadYoneda: monadYoneda, 
        runYoneda: runYoneda
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_57) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_57)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_58) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_58)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_59) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_59)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_60) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_60)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_61) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_61)(cond)(function (cond$prime) {
                        return cond$prime ? t : f;
                    });
                };
            };
        };
    };
    return {
        "<=<": $less$eq$less, 
        "=<<": $eq$less$less, 
        ">=>": $greater$eq$greater, 
        ifM: ifM, 
        join: join
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_62) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_62)(Prelude["<$>"](__dict_Apply_62["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_63) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_63)(Prelude["<$>"](__dict_Apply_63["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_64) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_64)(Prelude["<*>"](__dict_Apply_64)(Prelude["<*>"](__dict_Apply_64)(Prelude["<*>"](__dict_Apply_64)(Prelude["<$>"](__dict_Apply_64["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_65) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_65)(Prelude["<*>"](__dict_Apply_65)(Prelude["<*>"](__dict_Apply_65)(Prelude["<$>"](__dict_Apply_65["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_66) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_66)(Prelude["<*>"](__dict_Apply_66)(Prelude["<$>"](__dict_Apply_66["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_67) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_67)(Prelude["<$>"](__dict_Apply_67["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_68) {
        return function (a) {
            return $times$greater(__dict_Apply_68)(a)(forever(__dict_Apply_68)(a));
        };
    };
    return {
        "*>": $times$greater, 
        "<*": $less$times, 
        forever: forever, 
        lift2: lift2, 
        lift3: lift3, 
        lift4: lift4, 
        lift5: lift5
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        "<|>": $less$bar$greater, 
        Alt: Alt
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_69) {
        return function (__dict_Lazy1_70) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_69["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_69["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_70)(function (_) {
                    return many(__dict_Alternative_69)(__dict_Lazy1_70)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_71) {
        return function (__dict_Lazy1_72) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_71["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_71)(__dict_Lazy1_72)(v))(Prelude.pure(__dict_Alternative_71["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_73) {
        return function (_97) {
            if (_97) {
                return Prelude["return"](__dict_MonadPlus_73["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_97) {
                return Control_Plus.empty((__dict_MonadPlus_73["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = {
        create: function (value) {
            return value;
        }
    };
    var runReaderT = function (_98) {
        return _98;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr)(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_76) {
        return liftReaderT;
    });
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT.create(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT.create(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT.create(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_78) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_78)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_80) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_80["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_80["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_79) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_79["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_10) {
                        return runReaderT(k(_10))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_79["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_81) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_81);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftReaderT)(Prelude.pure(__dict_Applicative_81)));
    };
    var monadReaderT = function (__dict_Monad_74) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_74["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_74);
        });
    };
    var altReaderT = function (__dict_Alt_83) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_83)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_83["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_77) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_77["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_77)));
    };
    var alternativeReaderT = function (__dict_Alternative_82) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_82["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_82["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_75) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_75["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_75["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        altReaderT: altReaderT, 
        alternativeReaderT: alternativeReaderT, 
        applicativeReaderT: applicativeReaderT, 
        applyReaderT: applyReaderT, 
        bindReaderT: bindReaderT, 
        functorReaderT: functorReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadReaderT: monadReaderT, 
        monadTransReaderT: monadTransReaderT, 
        plusReaderT: plusReaderT, 
        runReaderT: runReaderT, 
        withReaderT: withReaderT
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var showEither = function (__dict_Show_84) {
        return function (__dict_Show_85) {
            return new Prelude.Show(function (_108) {
                if (_108 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_84)(_108.value0) + ")");
                };
                if (_108 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_85)(_108.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_102) {
        return function (_103) {
            if (_103 instanceof Left) {
                return new Left(_103.value0);
            };
            if (_103 instanceof Right) {
                return new Right(_102(_103.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_88) {
        return function (__dict_Eq_89) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_88)(__dict_Eq_89))(a)(b);
                };
            }, function (_109) {
                return function (_110) {
                    if (_109 instanceof Left && _110 instanceof Left) {
                        return Prelude["=="](__dict_Eq_88)(_109.value0)(_110.value0);
                    };
                    if (_109 instanceof Right && _110 instanceof Right) {
                        return Prelude["=="](__dict_Eq_89)(_109.value0)(_110.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_86) {
        return function (__dict_Ord_87) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_86["__superclass_Prelude.Eq_0"]())(__dict_Ord_87["__superclass_Prelude.Eq_0"]());
            }, function (_111) {
                return function (_112) {
                    if (_111 instanceof Left && _112 instanceof Left) {
                        return Prelude.compare(__dict_Ord_86)(_111.value0)(_112.value0);
                    };
                    if (_111 instanceof Right && _112 instanceof Right) {
                        return Prelude.compare(__dict_Ord_87)(_111.value0)(_112.value0);
                    };
                    if (_111 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_112 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_99) {
        return function (_100) {
            return function (_101) {
                if (_101 instanceof Left) {
                    return _99(_101.value0);
                };
                if (_101 instanceof Right) {
                    return _100(_101.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_104) {
        return function (_105) {
            if (_104 instanceof Left) {
                return new Left(_104.value0);
            };
            if (_104 instanceof Right) {
                return Prelude["<$>"](functorEither)(_104.value0)(_105);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_106) {
        return function (_107) {
            if (_106 instanceof Left) {
                return _107;
            };
            return _106;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        altEither: altEither, 
        applicativeEither: applicativeEither, 
        applyEither: applyEither, 
        bindEither: bindEither, 
        either: either, 
        eqEither: eqEither, 
        functorEither: functorEither, 
        isLeft: isLeft, 
        isRight: isRight, 
        monadEither: monadEither, 
        ordEither: ordEither, 
        showEither: showEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice2: choice2, 
        choice3: choice3, 
        choice4: choice4, 
        choice5: choice5, 
        choice6: choice6, 
        choice7: choice7, 
        choice8: choice8, 
        choice9: choice9
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var showMaybe = function (__dict_Show_90) {
        return new Prelude.Show(function (_128) {
            if (_128 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_90)(_128.value0) + ")");
            };
            if (_128 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_91) {
        return new Prelude.Semigroup(function (_126) {
            return function (_127) {
                if (_126 instanceof Nothing) {
                    return _127;
                };
                if (_127 instanceof Nothing) {
                    return _126;
                };
                if (_126 instanceof Just && _127 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_91)(_126.value0)(_127.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_113) {
        return function (_114) {
            return function (_115) {
                if (_115 instanceof Nothing) {
                    return _113;
                };
                if (_115 instanceof Just) {
                    return _114(_115.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_116) {
        return function (_117) {
            if (_117 instanceof Just) {
                return new Just(_116(_117.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_124) {
        return function (_125) {
            if (_125 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_124(_125));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_93) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_93))(a)(b);
            };
        }, function (_129) {
            return function (_130) {
                if (_129 instanceof Nothing && _130 instanceof Nothing) {
                    return true;
                };
                if (_129 instanceof Just && _130 instanceof Just) {
                    return Prelude["=="](__dict_Eq_93)(_129.value0)(_130.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_92) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_92["__superclass_Prelude.Eq_0"]());
        }, function (_131) {
            return function (_132) {
                if (_131 instanceof Just && _132 instanceof Just) {
                    return Prelude.compare(__dict_Ord_92)(_131.value0)(_132.value0);
                };
                if (_131 instanceof Nothing && _132 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_131 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_132 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_118) {
        return function (_119) {
            if (_118 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_118.value0)(_119);
            };
            if (_118 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_122) {
        return function (_123) {
            if (_122 instanceof Just) {
                return _123(_122.value0);
            };
            if (_122 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_120) {
        return function (_121) {
            if (_120 instanceof Nothing) {
                return _121;
            };
            return _120;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Just: Just, 
        Nothing: Nothing, 
        altMaybe: altMaybe, 
        alternativeMaybe: alternativeMaybe, 
        applicativeMaybe: applicativeMaybe, 
        applyMaybe: applyMaybe, 
        bindMaybe: bindMaybe, 
        eqMaybe: eqMaybe, 
        extendMaybe: extendMaybe, 
        fromMaybe: fromMaybe, 
        functorMaybe: functorMaybe, 
        isJust: isJust, 
        isNothing: isNothing, 
        maybe: maybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        ordMaybe: ordMaybe, 
        plusMaybe: plusMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_135) {
        if (_135.length >= 1) {
            var _566 = _135.slice(1);
            return new Data_Maybe.Just(_566);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__151) {
            return function (__copy__152) {
                return function (__copy__153) {
                    var _151 = __copy__151;
                    var _152 = __copy__152;
                    var _153 = __copy__153;
                    tco: while (true) {
                        if (_153.length >= 1) {
                            var _571 = _153.slice(1);
                            if (_152(_153[0])) {
                                var __tco__151 = Prelude[":"](_153[0])(_151);
                                var __tco__152 = _152;
                                _151 = __tco__151;
                                _152 = __tco__152;
                                _153 = _571;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_151), 
                            rest: _153
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _572 = comp(x)(y);
                    if (_572 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_572 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_572 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_94) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_94))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_137) {
        if (_137.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_144) {
        return function (_145) {
            if (_145.length === 0) {
                return [  ];
            };
            if (_145.length >= 1) {
                var _577 = _145.slice(1);
                return Prelude[":"](_145[0])(nubBy(_144)(filter(function (y) {
                    return !_144(_145[0])(y);
                })(_577)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_95) {
        return nubBy(Prelude["=="](__dict_Eq_95));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__134) {
        var _134 = __copy__134;
        tco: while (true) {
            if (_134.length >= 1) {
                var _580 = _134.slice(1);
                if (_580.length === 0) {
                    return new Data_Maybe.Just(_134[0]);
                };
            };
            if (_134.length >= 1) {
                var _582 = _134.slice(1);
                _134 = _582;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_141) {
        return function (_142) {
            return function (_143) {
                if (_142.length === 0) {
                    return [  ];
                };
                if (_143.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_141(x))(_143) >= 0;
                };
                return filter(el)(_142);
            };
        };
    };
    var intersect = function (__dict_Eq_96) {
        return intersectBy(Prelude["=="](__dict_Eq_96));
    };
    var init = function (_136) {
        if (_136.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_136) - 1)(_136));
    };
    var head = function (_133) {
        if (_133.length >= 1) {
            var _589 = _133.slice(1);
            return new Data_Maybe.Just(_133[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__148) {
            return function (__copy__149) {
                return function (__copy__150) {
                    var _148 = __copy__148;
                    var _149 = __copy__149;
                    var _150 = __copy__150;
                    tco: while (true) {
                        if (_150.length === 0) {
                            return reverse(_148);
                        };
                        if (_150.length >= 1) {
                            var _594 = _150.slice(1);
                            var sp = span(_149(_150[0]))(_594);
                            var __tco__148 = Prelude[":"](Prelude[":"](_150[0])(sp.init))(_148);
                            var __tco__149 = _149;
                            _148 = __tco__148;
                            _149 = __tco__149;
                            _150 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_97) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_97))(xs);
        };
    };
    var group$prime = function (__dict_Ord_98) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_98["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_98));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_99) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_99)(x));
        };
    };
    var elemIndex = function (__dict_Eq_100) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_100)(x));
        };
    };
    var deleteBy = function (_138) {
        return function (_139) {
            return function (_140) {
                if (_140.length === 0) {
                    return [  ];
                };
                var _598 = findIndex(_138(_139))(_140);
                if (_598 < 0) {
                    return _140;
                };
                return deleteAt(_598)(1)(_140);
            };
        };
    };
    var $$delete = function (__dict_Eq_101) {
        return deleteBy(Prelude["=="](__dict_Eq_101));
    };
    var $bslash$bslash = function (__dict_Eq_102) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__146) {
                    return function (__copy__147) {
                        var _146 = __copy__146;
                        var _147 = __copy__147;
                        tco: while (true) {
                            if (_147.length === 0) {
                                return _146;
                            };
                            if (_146.length === 0) {
                                return [  ];
                            };
                            if (_147.length >= 1) {
                                var _602 = _147.slice(1);
                                var __tco__146 = $$delete(__dict_Eq_102)(_147[0])(_146);
                                _146 = __tco__146;
                                _147 = _602;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        "!!": $bang$bang, 
        "..": $dot$dot, 
        "\\\\": $bslash$bslash, 
        altArray: altArray, 
        alternativeArray: alternativeArray, 
        append: append, 
        applicativeArray: applicativeArray, 
        applyArray: applyArray, 
        bindArray: bindArray, 
        catMaybes: catMaybes, 
        concat: concat, 
        concatMap: concatMap, 
        "delete": $$delete, 
        deleteAt: deleteAt, 
        deleteBy: deleteBy, 
        drop: drop, 
        elemIndex: elemIndex, 
        elemLastIndex: elemLastIndex, 
        filter: filter, 
        findIndex: findIndex, 
        findLastIndex: findLastIndex, 
        functorArray: functorArray, 
        group: group, 
        "group'": group$prime, 
        groupBy: groupBy, 
        head: head, 
        init: init, 
        insertAt: insertAt, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        last: last, 
        length: length, 
        map: map, 
        mapMaybe: mapMaybe, 
        monadArray: monadArray, 
        monadPlusArray: monadPlusArray, 
        nub: nub, 
        nubBy: nubBy, 
        "null": $$null, 
        plusArray: plusArray, 
        range: range, 
        reverse: reverse, 
        semigroupArray: semigroupArray, 
        singleton: singleton, 
        snoc: snoc, 
        sort: sort, 
        sortBy: sortBy, 
        span: span, 
        tail: tail, 
        take: take, 
        updateAt: updateAt, 
        zipWith: zipWith
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };
    
  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };
    
  function pushSTArrayImpl(arr, a) {
    return function() {
      arr.push(a);
      return {};
    };
  };
    var pushSTArray = function (arr) {
        return function (a) {
            return pushSTArrayImpl(arr, a);
        };
    };
    var pokeSTArray = function (arr) {
        return function (i) {
            return function (a) {
                return pokeSTArrayImpl(arr, i, a);
            };
        };
    };
    var peekSTArray = function (arr) {
        return function (i) {
            return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        emptySTArray: emptySTArray, 
        peekSTArray: peekSTArray, 
        pokeSTArray: pokeSTArray, 
        pushSTArray: pushSTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_154) {
        if (_154 instanceof Data_Maybe.Just) {
            return _154.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var tail = function (_156) {
        if (_156.length >= 1) {
            var _607 = _156.slice(1);
            return _607;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_155) {
        if (_155.length >= 1) {
            var _610 = _155.slice(1);
            return _155[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        head: head, 
        init: init, 
        last: last, 
        tail: tail
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_103) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_103);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_104) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_104["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_104)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArr: monoidArr, 
        monoidArray: monoidArray, 
        monoidMaybe: monoidMaybe, 
        monoidString: monoidString, 
        monoidUnit: monoidUnit
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = {
        create: function (value) {
            return value;
        }
    };
    var showAll = new Prelude.Show(function (_162) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_162) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_163) {
        return function (_164) {
            return _163 && _164;
        };
    });
    var runAll = function (_157) {
        return _157;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_160) {
        return function (_161) {
            return _160 !== _161;
        };
    }, function (_158) {
        return function (_159) {
            return _158 === _159;
        };
    });
    return {
        All: All, 
        eqAll: eqAll, 
        monoidAll: monoidAll, 
        runAll: runAll, 
        semigroupAll: semigroupAll, 
        showAll: showAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = {
        create: function (value) {
            return value;
        }
    };
    var showAny = new Prelude.Show(function (_170) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_170) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_171) {
        return function (_172) {
            return _171 || _172;
        };
    });
    var runAny = function (_165) {
        return _165;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_168) {
        return function (_169) {
            return _168 !== _169;
        };
    }, function (_166) {
        return function (_167) {
            return _166 === _167;
        };
    });
    return {
        Any: Any, 
        eqAny: eqAny, 
        monoidAny: monoidAny, 
        runAny: runAny, 
        semigroupAny: semigroupAny, 
        showAny: showAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = {
        create: function (value) {
            return value;
        }
    };
    var showDual = function (__dict_Show_105) {
        return new Prelude.Show(function (_180) {
            return "Dual (" + (Prelude.show(__dict_Show_105)(_180) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_106) {
        return new Prelude.Semigroup(function (_181) {
            return function (_182) {
                return Prelude["<>"](__dict_Semigroup_106)(_182)(_181);
            };
        });
    };
    var runDual = function (_173) {
        return _173;
    };
    var monoidDual = function (__dict_Monoid_108) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_108["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_108));
    };
    var eqDual = function (__dict_Eq_109) {
        return new Prelude.Eq(function (_176) {
            return function (_177) {
                return Prelude["/="](__dict_Eq_109)(_176)(_177);
            };
        }, function (_174) {
            return function (_175) {
                return Prelude["=="](__dict_Eq_109)(_174)(_175);
            };
        });
    };
    var ordDual = function (__dict_Ord_107) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_107["__superclass_Prelude.Eq_0"]());
        }, function (_178) {
            return function (_179) {
                return Prelude.compare(__dict_Ord_107)(_178)(_179);
            };
        });
    };
    return {
        Dual: Dual, 
        eqDual: eqDual, 
        monoidDual: monoidDual, 
        ordDual: ordDual, 
        runDual: runDual, 
        semigroupDual: semigroupDual, 
        showDual: showDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = {
        create: function (value) {
            return value;
        }
    };
    var semigroupEndo = new Prelude.Semigroup(function (_184) {
        return function (_185) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_184)(_185);
        };
    });
    var runEndo = function (_183) {
        return _183;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        monoidEndo: monoidEndo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = {
        create: function (value) {
            return value;
        }
    };
    var showProduct = new Prelude.Show(function (_193) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_193) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_194) {
        return function (_195) {
            return _194 * _195;
        };
    });
    var runProduct = function (_186) {
        return _186;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_189) {
        return function (_190) {
            return _189 !== _190;
        };
    }, function (_187) {
        return function (_188) {
            return _187 === _188;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_191) {
        return function (_192) {
            return Prelude.compare(Prelude.ordNumber)(_191)(_192);
        };
    });
    return {
        Product: Product, 
        eqProduct: eqProduct, 
        monoidProduct: monoidProduct, 
        ordProduct: ordProduct, 
        runProduct: runProduct, 
        semigroupProduct: semigroupProduct, 
        showProduct: showProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = {
        create: function (value) {
            return value;
        }
    };
    var showSum = new Prelude.Show(function (_203) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_203) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_204) {
        return function (_205) {
            return _204 + _205;
        };
    });
    var runSum = function (_196) {
        return _196;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_199) {
        return function (_200) {
            return _199 !== _200;
        };
    }, function (_197) {
        return function (_198) {
            return _197 === _198;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_201) {
        return function (_202) {
            return Prelude.compare(Prelude.ordNumber)(_201)(_202);
        };
    });
    return {
        Sum: Sum, 
        eqSum: eqSum, 
        monoidSum: monoidSum, 
        ordSum: ordSum, 
        runSum: runSum, 
        semigroupSum: semigroupSum, 
        showSum: showSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_210) {
        if (_210.length >= 1) {
            var _667 = _210.slice(1);
            var _661 = unzip(_667);
            return new Tuple(Prelude[":"]((_210[0]).value0)(_661.value0), Prelude[":"]((_210[0]).value1)(_661.value1));
        };
        if (_210.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_208) {
        return function (_209) {
            return _208(_209.value0)(_209.value1);
        };
    };
    var swap = function (_211) {
        return new Tuple(_211.value1, _211.value0);
    };
    var snd = function (_207) {
        return _207.value1;
    };
    var showTuple = function (__dict_Show_110) {
        return function (__dict_Show_111) {
            return new Prelude.Show(function (_212) {
                return "Tuple (" + (Prelude.show(__dict_Show_110)(_212.value0) + (") (" + (Prelude.show(__dict_Show_111)(_212.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_217) {
        return function (_218) {
            return new Tuple(_218.value0, _217.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_112) {
        return function (__dict_Semigroup_113) {
            return new Prelude.Semigroup(function (_219) {
                return function (_220) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_112)(_219.value0)(_220.value0), Prelude["<>"](__dict_Semigroup_113)(_219.value1)(_220.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_116) {
        return function (__dict_Monoid_117) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_116["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_117["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_116), Data_Monoid.mempty(__dict_Monoid_117)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_221) {
        return function (_222) {
            return new Tuple(_222.value0, _221(_222.value1));
        };
    });
    var fst = function (_206) {
        return _206.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_119) {
        return function (__dict_Lazy1_120) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_119)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_120)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_121) {
        return function (__dict_Lazy2_122) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_121)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_122)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_123) {
        return function (__dict_Lazy_124) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_123)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_124)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_227) {
        return function (_228) {
            return new Tuple(_228.value0, _227(_228));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_125) {
        return function (__dict_Eq_126) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_125)(__dict_Eq_126))(t1)(t2);
                };
            }, function (_213) {
                return function (_214) {
                    return Prelude["=="](__dict_Eq_125)(_213.value0)(_214.value0) && Prelude["=="](__dict_Eq_126)(_213.value1)(_214.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_114) {
        return function (__dict_Ord_115) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_114["__superclass_Prelude.Eq_0"]())(__dict_Ord_115["__superclass_Prelude.Eq_0"]());
            }, function (_215) {
                return function (_216) {
                    var _712 = Prelude.compare(__dict_Ord_114)(_215.value0)(_216.value0);
                    if (_712 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_115)(_215.value1)(_216.value1);
                    };
                    return _712;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_128) {
        return new Prelude.Apply(function (_223) {
            return function (_224) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_128)(_223.value0)(_224.value0), _223.value1(_224.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_127) {
        return new Prelude.Bind(function (_225) {
            return function (_226) {
                var _725 = _226(_225.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_127)(_225.value0)(_725.value0), _725.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_127);
        });
    };
    var applicativeTuple = function (__dict_Monoid_129) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_129["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_129)));
    };
    var monadTuple = function (__dict_Monoid_118) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_118);
        }, function () {
            return bindTuple(__dict_Monoid_118["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        applicativeTuple: applicativeTuple, 
        applyTuple: applyTuple, 
        bindTuple: bindTuple, 
        comonadTuple: comonadTuple, 
        curry: curry, 
        eqTuple: eqTuple, 
        extendTuple: extendTuple, 
        fst: fst, 
        functorTuple: functorTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple, 
        lazyTuple: lazyTuple, 
        monadTuple: monadTuple, 
        monoidTuple: monoidTuple, 
        ordTuple: ordTuple, 
        semigroupTuple: semigroupTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        showTuple: showTuple, 
        snd: snd, 
        swap: swap, 
        uncurry: uncurry, 
        unzip: unzip, 
        zip: zip
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var EnvT = {
        create: function (value) {
            return value;
        }
    };
    var withEnvT = function (_230) {
        return function (_231) {
            return EnvT.create(new Data_Tuple.Tuple(_230(_231.value0), _231.value1));
        };
    };
    var runEnvT = function (_229) {
        return _229;
    };
    var mapEnvT = function (_232) {
        return function (_233) {
            return EnvT.create(new Data_Tuple.Tuple(_233.value0, _232(_233.value1)));
        };
    };
    var functorEnvT = function (__dict_Functor_130) {
        return new Prelude.Functor(function (_234) {
            return function (_235) {
                return EnvT.create(new Data_Tuple.Tuple(_235.value0, Prelude["<$>"](__dict_Functor_130)(_234)(_235.value1)));
            };
        });
    };
    var extendEnvT = function (__dict_Extend_131) {
        return new Control_Extend.Extend(function (_236) {
            return function (_237) {
                return EnvT.create(new Data_Tuple.Tuple(_237.value0, Prelude["<$>"](__dict_Extend_131["__superclass_Prelude.Functor_0"]())(_236)(Control_Extend["<<="](__dict_Extend_131)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tuple.Tuple.create(_237.value0))(EnvT.create))(_237.value1))));
            };
        }, function () {
            return functorEnvT(__dict_Extend_131["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransEnvT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_132) {
        return function (_239) {
            return _239.value1;
        };
    });
    var comonadEnvT = function (__dict_Comonad_133) {
        return new Control_Comonad.Comonad(function () {
            return extendEnvT(__dict_Comonad_133["__superclass_Control.Extend.Extend_0"]());
        }, function (_238) {
            return Control_Comonad.extract(__dict_Comonad_133)(_238.value1);
        });
    };
    return {
        EnvT: EnvT, 
        comonadEnvT: comonadEnvT, 
        comonadTransEnvT: comonadTransEnvT, 
        extendEnvT: extendEnvT, 
        functorEnvT: functorEnvT, 
        mapEnvT: mapEnvT, 
        runEnvT: runEnvT, 
        withEnvT: withEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var StoreT = {
        create: function (value) {
            return value;
        }
    };
    var runStoreT = function (_240) {
        return _240;
    };
    var functorStoreT = function (__dict_Functor_134) {
        return new Prelude.Functor(function (_241) {
            return function (_242) {
                return StoreT.create(new Data_Tuple.Tuple(Prelude["<$>"](__dict_Functor_134)(function (h) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(h)(_241);
                })(_242.value0), _242.value1));
            };
        });
    };
    var extendStoreT = function (__dict_Extend_135) {
        return new Control_Extend.Extend(function (_243) {
            return function (_244) {
                return StoreT.create(new Data_Tuple.Tuple(Control_Extend["<<="](__dict_Extend_135)(function (w$prime) {
                    return function (s$prime) {
                        return _243(StoreT.create(new Data_Tuple.Tuple(w$prime, s$prime)));
                    };
                })(_244.value0), _244.value1));
            };
        }, function () {
            return functorStoreT(__dict_Extend_135["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransStoreT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_136) {
        return function (_246) {
            return Prelude["<$>"]((__dict_Comonad_136["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                return f(_246.value1);
            })(_246.value0);
        };
    });
    var comonadStoreT = function (__dict_Comonad_137) {
        return new Control_Comonad.Comonad(function () {
            return extendStoreT(__dict_Comonad_137["__superclass_Control.Extend.Extend_0"]());
        }, function (_245) {
            return Control_Comonad.extract(__dict_Comonad_137)(_245.value0)(_245.value1);
        });
    };
    return {
        StoreT: StoreT, 
        comonadStoreT: comonadStoreT, 
        comonadTransStoreT: comonadTransStoreT, 
        extendStoreT: extendStoreT, 
        functorStoreT: functorStoreT, 
        runStoreT: runStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Data_Tuple = PS.Data_Tuple;
    function ComonadStore(__superclass_Control$dotComonad$dotComonad_0, peek, pos) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.peek = peek;
        this.pos = pos;
    };
    var pos = function (dict) {
        return dict.pos;
    };
    var peek = function (dict) {
        return dict.peek;
    };
    var peeks = function (__dict_ComonadStore_138) {
        return function (f) {
            return function (x) {
                return peek(__dict_ComonadStore_138)(f(pos(__dict_ComonadStore_138)(x)))(x);
            };
        };
    };
    var seeks = function (__dict_ComonadStore_139) {
        return function (__dict_Extend_140) {
            return function (f) {
                return function (x) {
                    return peeks(__dict_ComonadStore_139)(f)(Control_Extend.duplicate(__dict_Extend_140)(x));
                };
            };
        };
    };
    var seek = function (__dict_ComonadStore_141) {
        return function (__dict_Extend_142) {
            return function (s) {
                return function (x) {
                    return peek(__dict_ComonadStore_141)(s)(Control_Extend.duplicate(__dict_Extend_142)(x));
                };
            };
        };
    };
    var experiment = function (__dict_ComonadStore_143) {
        return function (__dict_Functor_144) {
            return function (f) {
                return function (x) {
                    return Prelude["<$>"](__dict_Functor_144)(Prelude.flip(peek(__dict_ComonadStore_143))(x))(f(pos(__dict_ComonadStore_143)(x)));
                };
            };
        };
    };
    var comonadStoreStoreT = function (__dict_Comonad_145) {
        return new ComonadStore(function () {
            return Control_Comonad_Store_Trans.comonadStoreT(__dict_Comonad_145);
        }, function (_248) {
            return function (_249) {
                return Control_Comonad.extract(__dict_Comonad_145)(_249.value0)(_248);
            };
        }, function (_247) {
            return _247.value1;
        });
    };
    return {
        ComonadStore: ComonadStore, 
        comonadStoreStoreT: comonadStoreStoreT, 
        experiment: experiment, 
        peek: peek, 
        peeks: peeks, 
        pos: pos, 
        seek: seek, 
        seeks: seeks
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var TracedT = {
        create: function (value) {
            return value;
        }
    };
    var runTracedT = function (_250) {
        return _250;
    };
    var functorTracedT = function (__dict_Functor_146) {
        return new Prelude.Functor(function (_251) {
            return function (_252) {
                return Prelude["<$>"](__dict_Functor_146)(function (g) {
                    return function (t) {
                        return _251(g(t));
                    };
                })(_252);
            };
        });
    };
    var extendTracedT = function (__dict_Extend_147) {
        return function (__dict_Semigroup_148) {
            return new Control_Extend.Extend(function (_253) {
                return function (_254) {
                    return Control_Extend["<<="](__dict_Extend_147)(function (w_1) {
                        return function (t) {
                            return _253(Prelude["<$>"](__dict_Extend_147["__superclass_Prelude.Functor_0"]())(function (h) {
                                return function (t$prime) {
                                    return h(Prelude["<>"](__dict_Semigroup_148)(t)(t$prime));
                                };
                            })(w_1));
                        };
                    })(_254);
                };
            }, function () {
                return functorTracedT(__dict_Extend_147["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var comonadTransTracedT = function (__dict_Monoid_149) {
        return new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_150) {
            return function (_256) {
                return Prelude["<$>"]((__dict_Comonad_150["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                    return f(Data_Monoid.mempty(__dict_Monoid_149));
                })(_256);
            };
        });
    };
    var comonadTracedT = function (__dict_Comonad_151) {
        return function (__dict_Monoid_152) {
            return new Control_Comonad.Comonad(function () {
                return extendTracedT(__dict_Comonad_151["__superclass_Control.Extend.Extend_0"]())(__dict_Monoid_152["__superclass_Prelude.Semigroup_0"]());
            }, function (_255) {
                return Control_Comonad.extract(__dict_Comonad_151)(_255)(Data_Monoid.mempty(__dict_Monoid_152));
            });
        };
    };
    return {
        TracedT: TracedT, 
        comonadTracedT: comonadTracedT, 
        comonadTransTracedT: comonadTransTracedT, 
        extendTracedT: extendTracedT, 
        functorTracedT: functorTracedT, 
        runTracedT: runTracedT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    function ComonadTraced(__superclass_Control$dotComonad$dotComonad_0, track) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.track = track;
    };
    var track = function (dict) {
        return dict.track;
    };
    var tracks = function (__dict_Comonad_153) {
        return function (__dict_ComonadTraced_154) {
            return function (f) {
                return function (w) {
                    return track(__dict_ComonadTraced_154)(f(Control_Comonad.extract(__dict_Comonad_153)(w)))(w);
                };
            };
        };
    };
    var listens = function (__dict_Functor_155) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_155)(function (g) {
                    return function (t) {
                        return new Data_Tuple.Tuple(g(t), f(t));
                    };
                })(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    var listen = function (__dict_Functor_156) {
        return function (tr) {
            return Prelude["<$>"](__dict_Functor_156)(function (f) {
                return function (t) {
                    return new Data_Tuple.Tuple(f(t), t);
                };
            })(Control_Comonad_Traced_Trans.runTracedT(tr));
        };
    };
    var comonadTracedTracedT = function (__dict_Comonad_157) {
        return function (__dict_Monoid_158) {
            return new ComonadTraced(function () {
                return Control_Comonad_Traced_Trans.comonadTracedT(__dict_Comonad_157)(__dict_Monoid_158);
            }, function (t) {
                return function (tr) {
                    return Control_Comonad.extract(__dict_Comonad_157)(Control_Comonad_Traced_Trans.runTracedT(tr))(t);
                };
            });
        };
    };
    var censor = function (__dict_Functor_159) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_159)(Prelude[">>>"](Prelude.semigroupoidArr)(f))(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    return {
        ComonadTraced: ComonadTraced, 
        censor: censor, 
        comonadTracedTracedT: comonadTracedTracedT, 
        listen: listen, 
        listens: listens, 
        track: track, 
        tracks: tracks
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ErrorT = {
        create: function (value) {
            return value;
        }
    };
    var runErrorT = function (_257) {
        return _257;
    };
    var monadTransErrorT = function (__dict_Error_162) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_163) {
            return function (m) {
                return ErrorT.create(Prelude[">>="](__dict_Monad_163["__superclass_Prelude.Bind_1"]())(m)(function (_12) {
                    return Prelude["return"](__dict_Monad_163)(new Data_Either.Right(_12));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT.create(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_168) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_168["__superclass_Prelude.Bind_1"]())(m)(function (_14) {
                    return Prelude["return"](__dict_Monad_168)((function () {
                        if (_14 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_14.value0), Prelude.id(Prelude.categoryArr));
                        };
                        if (_14 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_14.value0.value0), _14.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_169) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_169["__superclass_Prelude.Bind_1"]())(listen(m))(function (_13) {
                    return Prelude["return"](__dict_Monad_169)(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                        return new Data_Tuple.Tuple(r, _13.value1);
                    })(_13.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT.create(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT.create(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_170) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(ErrorT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_170)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Apply_173) {
        return new Prelude.Apply(function (_258) {
            return function (_259) {
                return ErrorT.create(Prelude["<*>"](__dict_Apply_173)(Prelude["<$>"](__dict_Apply_173["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_258))(_259));
            };
        }, function () {
            return functorErrorT(__dict_Apply_173["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindErrorT = function (__dict_Monad_171) {
        return function (__dict_Error_172) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_171["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_11) {
                        if (_11 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_171)(new Data_Either.Left(_11.value0));
                        };
                        if (_11 instanceof Data_Either.Right) {
                            return runErrorT(f(_11.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT((__dict_Monad_171["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeErrorT = function (__dict_Applicative_174) {
        return new Prelude.Applicative(function () {
            return applyErrorT(__dict_Applicative_174["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return ErrorT.create(Prelude.pure(__dict_Applicative_174)(new Data_Either.Right(a)));
        });
    };
    var monadErrorT = function (__dict_Monad_166) {
        return function (__dict_Error_167) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(__dict_Monad_166["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindErrorT(__dict_Monad_166)(__dict_Error_167);
            });
        };
    };
    var altErrorT = function (__dict_Monad_177) {
        return function (__dict_Error_178) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_177["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_177)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_177["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_160) {
        return function (__dict_Error_161) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_160)(__dict_Error_161);
            }, Prelude["return"](__dict_Monad_160)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_161)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_175) {
        return function (__dict_Error_176) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_175)(__dict_Error_176);
            }, function () {
                return applicativeErrorT(__dict_Monad_175["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_164) {
        return function (__dict_Error_165) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_164)(__dict_Error_165);
            }, function () {
                return monadErrorT(__dict_Monad_164)(__dict_Error_165);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        altErrorT: altErrorT, 
        alternativeErrorT: alternativeErrorT, 
        applicativeErrorT: applicativeErrorT, 
        applyErrorT: applyErrorT, 
        bindErrorT: bindErrorT, 
        functorErrorT: functorErrorT, 
        liftCallCCError: liftCallCCError, 
        liftListenError: liftListenError, 
        liftPassError: liftPassError, 
        mapErrorT: mapErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT, 
        plusErrorT: plusErrorT, 
        runErrorT: runErrorT
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = {
        create: function (value) {
            return value;
        }
    };
    var runMaybeT = function (_260) {
        return _260;
    };
    var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_179) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude.liftM1(__dict_Monad_179)(Data_Maybe.Just.create));
    });
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_181) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_181["__superclass_Prelude.Bind_1"]())(m)(function (_17) {
                    return Prelude["return"](__dict_Monad_181)((function () {
                        if (_17 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr));
                        };
                        if (_17 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_17.value0.value0), _17.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_182) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_182["__superclass_Prelude.Bind_1"]())(listen(m))(function (_16) {
                    return Prelude["return"](__dict_Monad_182)(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                        return new Data_Tuple.Tuple(r, _16.value1);
                    })(_16.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT.create($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr)(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT.create(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT.create(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var monadMaybeT = function (__dict_Monad_180) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_180);
        }, function () {
            return bindMaybeT(__dict_Monad_180);
        });
    };
    var functorMaybeT = function (__dict_Monad_183) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_183)));
    };
    var bindMaybeT = function (__dict_Monad_184) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT.create(Prelude[">>="](__dict_Monad_184["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_15) {
                    if (_15 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_184)(Data_Maybe.Nothing.value);
                    };
                    if (_15 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_15.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_184);
        });
    };
    var applyMaybeT = function (__dict_Monad_185) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_185)), function () {
            return functorMaybeT(__dict_Monad_185);
        });
    };
    var applicativeMaybeT = function (__dict_Monad_186) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_186);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Monad_186["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    return {
        MaybeT: MaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        applyMaybeT: applyMaybeT, 
        bindMaybeT: bindMaybeT, 
        functorMaybeT: functorMaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftPassMaybe: liftPassMaybe, 
        mapMaybeT: mapMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT, 
        runMaybeT: runMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var RWST = {
        create: function (value) {
            return value;
        }
    };
    var runRWST = function (_263) {
        return _263;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_189) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_190) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_191) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_191["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_191)(mkSee(__dict_Monoid_190)(s)(a)(Data_Monoid.mempty(__dict_Monoid_190)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_192) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_192)(function (see) {
                            var _814 = {};
                            for (var _815 in see) {
                                if (see.hasOwnProperty(_815)) {
                                    _814[_815] = see[_815];
                                };
                            };
                            _814.result = f(see.result);
                            return _814;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_193) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_193["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_193)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_194) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_194["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_194)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_197) {
        return function (__dict_Semigroup_198) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_197)(Prelude["<$>"](__dict_Apply_197["__superclass_Prelude.Functor_0"]())(function (_261) {
                                return function (see) {
                                    var _817 = {};
                                    for (var _818 in see) {
                                        if (see.hasOwnProperty(_818)) {
                                            _817[_818] = see[_818];
                                        };
                                    };
                                    _817.result = _261.result(see.result);
                                    _817.log = Prelude["<>"](__dict_Semigroup_198)(_261.log)(see.log);
                                    return _817;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_197["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_195) {
        return function (__dict_Semigroup_196) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_195)(runRWST(m)(r)(s))(function (_262) {
                                return Prelude["<$>"]((__dict_Bind_195["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _822 = {};
                                    for (var _823 in see$prime) {
                                        if (see$prime.hasOwnProperty(_823)) {
                                            _822[_823] = see$prime[_823];
                                        };
                                    };
                                    _822.log = Prelude["<>"](__dict_Semigroup_196)(_262.log)(see$prime.log);
                                    return _822;
                                })(runRWST(f(_262.result))(r)(_262.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_195["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_196);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_199) {
        return function (__dict_Monoid_200) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_199["__superclass_Prelude.Apply_0"]())(__dict_Monoid_200["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_199)(mkSee(__dict_Monoid_200)(s)(a)(Data_Monoid.mempty(__dict_Monoid_200)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_187) {
        return function (__dict_Monoid_188) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_187["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_188);
            }, function () {
                return bindRWST(__dict_Monad_187["__superclass_Prelude.Bind_1"]())(__dict_Monoid_188["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        applicativeRWST: applicativeRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        evalRWST: evalRWST, 
        execRWST: execRWST, 
        functorRWST: functorRWST, 
        mapRWST: mapRWST, 
        mkSee: mkSee, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST, 
        runRWST: runRWST, 
        withRWST: withRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var StateT = {
        create: function (value) {
            return value;
        }
    };
    var runStateT = function (_266) {
        return _266;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(runStateT(s))(f));
        };
    };
    var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_203) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_203["__superclass_Prelude.Bind_1"]())(m)(function (_19) {
                    return Prelude["return"](__dict_Monad_203)(new Data_Tuple.Tuple(_19, s));
                });
            };
        };
    });
    var mapStateT = function (f) {
        return function (m) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_206) {
        return function (pass) {
            return function (m) {
                return StateT.create(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_206["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_21) {
                        return Prelude["return"](__dict_Monad_206)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_21.value0.value0, _21.value1), _21.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_207) {
        return function (listen) {
            return function (m) {
                return StateT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_207["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_20) {
                        return Prelude["return"](__dict_Monad_207)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_20.value0.value0, _20.value1), _20.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT.create(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = new Control_Lazy.Lazy1(function (f) {
        return StateT.create(function (s) {
            return runStateT(f(Prelude.unit))(s);
        });
    });
    var execStateT = function (__dict_Monad_209) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_209["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_265) {
                    return Prelude["return"](__dict_Monad_209)(_265.value1);
                });
            };
        };
    };
    var evalStateT = function (__dict_Monad_210) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_264) {
                    return Prelude["return"](__dict_Monad_210)(_264.value0);
                });
            };
        };
    };
    var monadStateT = function (__dict_Monad_204) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_204);
        }, function () {
            return bindStateT(__dict_Monad_204);
        });
    };
    var functorStateT = function (__dict_Monad_208) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_208)));
    };
    var bindStateT = function (__dict_Monad_211) {
        return new Prelude.Bind(function (_267) {
            return function (_268) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_211["__superclass_Prelude.Bind_1"]())(_267(s))(function (_18) {
                        return runStateT(_268(_18.value0))(_18.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_211);
        });
    };
    var applyStateT = function (__dict_Monad_212) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_212)), function () {
            return functorStateT(__dict_Monad_212);
        });
    };
    var applicativeStateT = function (__dict_Monad_213) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_213);
        }, function (a) {
            return StateT.create(function (s) {
                return Prelude["return"](__dict_Monad_213)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var altStateT = function (__dict_Monad_216) {
        return function (__dict_Alt_217) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT.create(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_217)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_216);
            });
        };
    };
    var plusStateT = function (__dict_Monad_201) {
        return function (__dict_Plus_202) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_201)(__dict_Plus_202["__superclass_Control.Alt.Alt_0"]());
            }, StateT.create(function (_) {
                return Control_Plus.empty(__dict_Plus_202);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_214) {
        return function (__dict_Alternative_215) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_214)(__dict_Alternative_215["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_214);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_205) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_205["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_205["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_205["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        altStateT: altStateT, 
        alternativeStateT: alternativeStateT, 
        applicativeStateT: applicativeStateT, 
        applyStateT: applyStateT, 
        bindStateT: bindStateT, 
        evalStateT: evalStateT, 
        execStateT: execStateT, 
        functorStateT: functorStateT, 
        lazy1StateT: lazy1StateT, 
        liftCallCCState: liftCallCCState, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCatchState: liftCatchState, 
        liftListenState: liftListenState, 
        liftPassState: liftPassState, 
        mapStateT: mapStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadStateT: monadStateT, 
        monadTransStateT: monadTransStateT, 
        plusStateT: plusStateT, 
        runStateT: runStateT, 
        withStateT: withStateT
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = {
        create: function (value) {
            return value;
        }
    };
    var runWriterT = function (_270) {
        return _270;
    };
    var monadTransWriterT = function (__dict_Monoid_222) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_223) {
            return function (m) {
                return WriterT.create(Prelude[">>="](__dict_Monad_223["__superclass_Prelude.Bind_1"]())(m)(function (_24) {
                    return Prelude["return"](__dict_Monad_223)(new Data_Tuple.Tuple(_24, Data_Monoid.mempty(__dict_Monoid_222)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT.create(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT.create($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_226) {
        return function (callCC) {
            return function (f) {
                return WriterT.create(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT.create(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_226))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_227) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_227)(function (_269) {
                return new Data_Tuple.Tuple(f(_269.value0), _269.value1);
            }));
        });
    };
    var applyWriterT = function (__dict_Monoid_230) {
        return function (__dict_Apply_231) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT.create((function () {
                        var k = function (_271) {
                            return function (_272) {
                                return new Data_Tuple.Tuple(_271.value0(_272.value0), Prelude["<>"](__dict_Monoid_230["__superclass_Prelude.Semigroup_0"]())(_271.value1)(_272.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_231)(Prelude["<$>"](__dict_Apply_231["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_231["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_228) {
        return function (__dict_Monad_229) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT.create(Prelude[">>="](__dict_Monad_229["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_23) {
                        return Prelude[">>="](__dict_Monad_229["__superclass_Prelude.Bind_1"]())(runWriterT(k(_23.value0)))(function (_22) {
                            return Prelude["return"](__dict_Monad_229)(new Data_Tuple.Tuple(_22.value0, Prelude["<>"](__dict_Monoid_228["__superclass_Prelude.Semigroup_0"]())(_23.value1)(_22.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_228)((__dict_Monad_229["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_232) {
        return function (__dict_Applicative_233) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_232)(__dict_Applicative_233["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT.create(Prelude.pure(__dict_Applicative_233)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_232))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_220) {
        return function (__dict_Monad_221) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_220)(__dict_Monad_221["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_220)(__dict_Monad_221);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_236) {
        return function (__dict_Alt_237) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT.create(Control_Alt["<|>"](__dict_Alt_237)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_237["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_218) {
        return function (__dict_Plus_219) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_218)(__dict_Plus_219["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_219));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_234) {
        return function (__dict_Alternative_235) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_234)(__dict_Alternative_235["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_234)(__dict_Alternative_235["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_224) {
        return function (__dict_MonadPlus_225) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_224)(__dict_MonadPlus_225["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_224)(__dict_MonadPlus_225["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        altWriterT: altWriterT, 
        alternativeWriterT: alternativeWriterT, 
        applicativeWriterT: applicativeWriterT, 
        applyWriterT: applyWriterT, 
        bindWriterT: bindWriterT, 
        functorWriterT: functorWriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT, 
        monadWriterT: monadWriterT, 
        plusWriterT: plusWriterT, 
        runWriterT: runWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Prelude = PS.Prelude;
    function MonadCont(callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_238) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_239) {
        return function (__dict_MonadCont_240) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_240)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_241) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_241)));
    };
    var monadContReaderT = function (__dict_MonadCont_242) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_242)));
    };
    var monadContStateT = function (__dict_MonadCont_243) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_243)));
    };
    var monadWriterT = function (__dict_Monoid_244) {
        return function (__dict_MonadCont_245) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_244)(callCC(__dict_MonadCont_245)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Either = PS.Data_Either;
    function MonadError(catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_246) {
        return function (__dict_Error_247) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT.create(Prelude[">>="](__dict_Monad_246["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_25) {
                        if (_25 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_25.value0));
                        };
                        if (_25 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_246)(new Data_Either.Right(_25.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT.create(Prelude["return"](__dict_Monad_246)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_248) {
        return new MonadError(function (_273) {
            return function (_274) {
                if (_273 instanceof Data_Either.Left) {
                    return _274(_273.value0);
                };
                if (_273 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_273.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_249) {
        return function (__dict_MonadError_250) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_250)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_249)(throwError(__dict_MonadError_250)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_251) {
        return function (__dict_MonadError_252) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_252)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_251)(throwError(__dict_MonadError_252)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_253) {
        return function (__dict_MonadError_254) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_254)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_253)(throwError(__dict_MonadError_254)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_255) {
        return function (__dict_Monoid_256) {
            return function (__dict_MonadError_257) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_257)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_256))(__dict_Monad_255)(throwError(__dict_MonadError_257)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorStateT: monadErrorStateT, 
        monadErrorWriterT: monadErrorWriterT, 
        throwError: throwError
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_282) {
            return f(_282.value0)(_282.value1.value0)(_282.value1.value1.value0)(_282.value1.value1.value1.value0)(_282.value1.value1.value1.value1.value0)(_282.value1.value1.value1.value1.value1.value0)(_282.value1.value1.value1.value1.value1.value1.value0)(_282.value1.value1.value1.value1.value1.value1.value1.value0)(_282.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_281) {
            return f(_281.value0)(_281.value1.value0)(_281.value1.value1.value0)(_281.value1.value1.value1.value0)(_281.value1.value1.value1.value1.value0)(_281.value1.value1.value1.value1.value1.value0)(_281.value1.value1.value1.value1.value1.value1.value0)(_281.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_280) {
            return f(_280.value0)(_280.value1.value0)(_280.value1.value1.value0)(_280.value1.value1.value1.value0)(_280.value1.value1.value1.value1.value0)(_280.value1.value1.value1.value1.value1.value0)(_280.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_279) {
            return f(_279.value0)(_279.value1.value0)(_279.value1.value1.value0)(_279.value1.value1.value1.value0)(_279.value1.value1.value1.value1.value0)(_279.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_278) {
            return f(_278.value0)(_278.value1.value0)(_278.value1.value1.value0)(_278.value1.value1.value1.value0)(_278.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_277) {
            return f(_277.value0)(_277.value1.value0)(_277.value1.value1.value0)(_277.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_276) {
            return f(_276.value0)(_276.value1.value0)(_276.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_275) {
            return f(_275.value0)(_275.value1);
        };
    };
    var con10 = function (f) {
        return function (_283) {
            return f(_283.value0)(_283.value1.value0)(_283.value1.value1.value0)(_283.value1.value1.value1.value0)(_283.value1.value1.value1.value1.value0)(_283.value1.value1.value1.value1.value1.value0)(_283.value1.value1.value1.value1.value1.value1.value0)(_283.value1.value1.value1.value1.value1.value1.value1.value0)(_283.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_283.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con2: con2, 
        con3: con3, 
        con4: con4, 
        con5: con5, 
        con6: con6, 
        con7: con7, 
        con8: con8, 
        con9: con9
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var showFirst = function (__dict_Show_258) {
        return new Prelude.Show(function (_291) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_258))(_291) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_292) {
        return function (_293) {
            if (_292 instanceof Data_Maybe.Just) {
                return _292;
            };
            return _293;
        };
    });
    var runFirst = function (_284) {
        return _284;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_260) {
        return new Prelude.Eq(function (_287) {
            return function (_288) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_260))(_287)(_288);
            };
        }, function (_285) {
            return function (_286) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_260))(_285)(_286);
            };
        });
    };
    var ordFirst = function (__dict_Ord_259) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_259["__superclass_Prelude.Eq_0"]());
        }, function (_289) {
            return function (_290) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_259))(_289)(_290);
            };
        });
    };
    return {
        First: First, 
        eqFirst: eqFirst, 
        monoidFirst: monoidFirst, 
        ordFirst: ordFirst, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst, 
        showFirst: showFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_261) {
        return function (__dict_Foldable_262) {
            return function (f) {
                return foldr(__dict_Foldable_262)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_261["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_261)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_263) {
        return function (__dict_Foldable_264) {
            return Prelude.flip(traverse_(__dict_Applicative_263)(__dict_Foldable_264));
        };
    };
    var sequence_ = function (__dict_Applicative_265) {
        return function (__dict_Foldable_266) {
            return traverse_(__dict_Applicative_265)(__dict_Foldable_266)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_267) {
        return function (__dict_Monoid_268) {
            return function (sep) {
                return function (xs) {
                    var go = function (_327) {
                        return function (_328) {
                            if (_327.init) {
                                return {
                                    init: false, 
                                    acc: _328
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_268["__superclass_Prelude.Semigroup_0"]())(_327.acc)(Prelude["<>"](__dict_Monoid_268["__superclass_Prelude.Semigroup_0"]())(sep)(_328))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_267)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_268)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_269) {
        return function (__dict_Monoid_270) {
            return foldl(__dict_Foldable_269)(Prelude["<>"](__dict_Monoid_270["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_270));
        };
    };
    var or = function (__dict_Foldable_271) {
        return foldl(__dict_Foldable_271)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_272) {
        return foldl(__dict_Foldable_272)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_273) {
        return foldl(__dict_Foldable_273)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_274) {
        return function (_325) {
            return function (_326) {
                return _325(_326.value1);
            };
        };
    }, function (_322) {
        return function (_323) {
            return function (_324) {
                return _322(_323)(_324.value1);
            };
        };
    }, function (_319) {
        return function (_320) {
            return function (_321) {
                return _319(_321.value1)(_320);
            };
        };
    });
    var foldableRef = new Foldable(function (__dict_Monoid_275) {
        return function (_317) {
            return function (_318) {
                return _317(_318);
            };
        };
    }, function (_314) {
        return function (_315) {
            return function (_316) {
                return _314(_315)(_316);
            };
        };
    }, function (_311) {
        return function (_312) {
            return function (_313) {
                return _311(_313)(_312);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_276) {
        return function (_309) {
            return function (_310) {
                if (_310 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_276);
                };
                if (_310 instanceof Data_Maybe.Just) {
                    return _309(_310.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_306) {
        return function (_307) {
            return function (_308) {
                if (_308 instanceof Data_Maybe.Nothing) {
                    return _307;
                };
                if (_308 instanceof Data_Maybe.Just) {
                    return _306(_307)(_308.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_303) {
        return function (_304) {
            return function (_305) {
                if (_305 instanceof Data_Maybe.Nothing) {
                    return _304;
                };
                if (_305 instanceof Data_Maybe.Just) {
                    return _303(_305.value0)(_304);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_277) {
        return function (_301) {
            return function (_302) {
                if (_302 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_277);
                };
                if (_302 instanceof Data_Either.Right) {
                    return _301(_302.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_298) {
        return function (_299) {
            return function (_300) {
                if (_300 instanceof Data_Either.Left) {
                    return _299;
                };
                if (_300 instanceof Data_Either.Right) {
                    return _298(_299)(_300.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_295) {
        return function (_296) {
            return function (_297) {
                if (_297 instanceof Data_Either.Left) {
                    return _296;
                };
                if (_297 instanceof Data_Either.Right) {
                    return _295(_297.value0)(_296);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_278) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_278["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_278))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_279) {
        return function (__dict_Foldable_280) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_280)(Data_Monoid_First.monoidFirst)(function (_294) {
                        return Prelude["=="](__dict_Eq_279)(a)(_294.value0) ? new Data_Maybe.Just(_294.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_281) {
        return function (__dict_Monoid_282) {
            return foldMap(__dict_Foldable_281)(__dict_Monoid_282)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_283) {
        return function (p) {
            return function (f) {
                var _1039 = foldMap(__dict_Foldable_283)(Data_Monoid.monoidArray)(function (x) {
                    return p(x) ? [ x ] : [  ];
                })(f);
                if (_1039.length >= 1) {
                    var _1041 = _1039.slice(1);
                    return new Data_Maybe.Just(_1039[0]);
                };
                if (_1039.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_284) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_284)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_285) {
        return function (__dict_Foldable_286) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_286))(Prelude["=="](__dict_Eq_285));
        };
    };
    var notElem = function (__dict_Eq_287) {
        return function (__dict_Foldable_288) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_287)(__dict_Foldable_288)(x));
            };
        };
    };
    var and = function (__dict_Foldable_289) {
        return foldl(__dict_Foldable_289)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_290) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_290)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        all: all, 
        and: and, 
        any: any, 
        elem: elem, 
        find: find, 
        fold: fold, 
        foldMap: foldMap, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableRef: foldableRef, 
        foldableTuple: foldableTuple, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray, 
        for_: for_, 
        intercalate: intercalate, 
        lookup: lookup, 
        mconcat: mconcat, 
        notElem: notElem, 
        or: or, 
        product: product, 
        sequence_: sequence_, 
        sum: sum, 
        traverse_: traverse_
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = {
        create: function (value) {
            return value;
        }
    };
    var showLast = function (__dict_Show_291) {
        return new Prelude.Show(function (_336) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_291))(_336) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_337) {
        return function (_338) {
            if (_338 instanceof Data_Maybe.Just) {
                return _338;
            };
            if (_338 instanceof Data_Maybe.Nothing) {
                return _337;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_329) {
        return _329;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_293) {
        return new Prelude.Eq(function (_332) {
            return function (_333) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_293))(_332)(_333);
            };
        }, function (_330) {
            return function (_331) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_293))(_330)(_331);
            };
        });
    };
    var ordLast = function (__dict_Ord_292) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_292["__superclass_Prelude.Eq_0"]());
        }, function (_334) {
            return function (_335) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_292))(_334)(_335);
            };
        });
    };
    return {
        Last: Last, 
        eqLast: eqLast, 
        monoidLast: monoidLast, 
        ordLast: ordLast, 
        runLast: runLast, 
        semigroupLast: semigroupLast, 
        showLast: showLast
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var StateR = {
        create: function (value) {
            return value;
        }
    };
    var StateL = {
        create: function (value) {
            return value;
        }
    };
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_295) {
        return function (_355) {
            return Prelude["<$>"]((__dict_Applicative_295["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_355.value0))(_355.value1);
        };
    }, function (__dict_Applicative_294) {
        return function (_353) {
            return function (_354) {
                return Prelude["<$>"]((__dict_Applicative_294["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_354.value0))(_353(_354.value1));
            };
        };
    });
    var traversableRef = new Traversable(function () {
        return Data_Foldable.foldableRef;
    }, function () {
        return Data_Eq.functorRef;
    }, function (__dict_Applicative_297) {
        return function (_349) {
            return Prelude["<$>"]((__dict_Applicative_297["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_349);
        };
    }, function (__dict_Applicative_296) {
        return function (_347) {
            return function (_348) {
                return Prelude["<$>"]((__dict_Applicative_296["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_347(_348));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_299) {
        return function (_352) {
            if (_352 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_299)(Data_Maybe.Nothing.value);
            };
            if (_352 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_299["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_352.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_298) {
        return function (_350) {
            return function (_351) {
                if (_351 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_298)(Data_Maybe.Nothing.value);
                };
                if (_351 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_298["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_350(_351.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_301) {
        return function (_346) {
            if (_346 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_301)(new Data_Either.Left(_346.value0));
            };
            if (_346 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_301["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_346.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_300) {
        return function (_344) {
            return function (_345) {
                if (_345 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_300)(new Data_Either.Left(_345.value0));
                };
                if (_345 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_300["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_344(_345.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var stateR = function (_340) {
        return _340;
    };
    var stateL = function (_339) {
        return _339;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_303) {
        return function (_343) {
            if (_343.length === 0) {
                return Prelude.pure(__dict_Applicative_303)([  ]);
            };
            if (_343.length >= 1) {
                var _1079 = _343.slice(1);
                return Prelude["<*>"](__dict_Applicative_303["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_303["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_343[0]))(sequence(traversableArray)(__dict_Applicative_303)(_1079));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_302) {
        return function (_341) {
            return function (_342) {
                if (_342.length === 0) {
                    return Prelude.pure(__dict_Applicative_302)([  ]);
                };
                if (_342.length >= 1) {
                    var _1083 = _342.slice(1);
                    return Prelude["<*>"](__dict_Applicative_302["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_302["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_341(_342[0])))(traverse(traversableArray)(__dict_Applicative_302)(_341)(_1083));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_304) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_304)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var functorStateR = new Prelude.Functor(function (f) {
        return function (k) {
            return StateR.create(function (s) {
                var _1084 = stateR(k)(s);
                return new Data_Tuple.Tuple(_1084.value0, f(_1084.value1));
            });
        };
    });
    var functorStateL = new Prelude.Functor(function (f) {
        return function (k) {
            return StateL.create(function (s) {
                var _1087 = stateL(k)(s);
                return new Data_Tuple.Tuple(_1087.value0, f(_1087.value1));
            });
        };
    });
    var $$for = function (__dict_Applicative_307) {
        return function (__dict_Traversable_308) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_308)(__dict_Applicative_307)(f)(x);
                };
            };
        };
    };
    var applyStateR = new Prelude.Apply(function (f) {
        return function (x) {
            return StateR.create(function (s) {
                var _1090 = stateR(x)(s);
                var _1091 = stateR(f)(_1090.value0);
                return new Data_Tuple.Tuple(_1091.value0, _1091.value1(_1090.value1));
            });
        };
    }, function () {
        return functorStateR;
    });
    var applyStateL = new Prelude.Apply(function (f) {
        return function (x) {
            return StateL.create(function (s) {
                var _1096 = stateL(f)(s);
                var _1097 = stateL(x)(_1096.value0);
                return new Data_Tuple.Tuple(_1097.value0, _1096.value1(_1097.value1));
            });
        };
    }, function () {
        return functorStateL;
    });
    var applicativeStateR = new Prelude.Applicative(function () {
        return applyStateR;
    }, function (a) {
        return StateR.create(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumR = function (__dict_Traversable_305) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateR(traverse(__dict_Traversable_305)(applicativeStateR)(function (a) {
                        return StateR.create(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var applicativeStateL = new Prelude.Applicative(function () {
        return applyStateL;
    }, function (a) {
        return StateL.create(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumL = function (__dict_Traversable_306) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateL(traverse(__dict_Traversable_306)(applicativeStateL)(function (a) {
                        return StateL.create(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        mapAccumL: mapAccumL, 
        mapAccumR: mapAccumR, 
        sequence: sequence, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableRef: traversableRef, 
        traversableTuple: traversableTuple, 
        traverse: traverse, 
        zipWithA: zipWithA
    };
})();
var PS = PS || {};
PS.Data_Functor_Coproduct = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Coproduct = {
        create: function (value) {
            return value;
        }
    };
    var runCoproduct = function (_356) {
        return _356;
    };
    var right = Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct.create)(Data_Either.Right.create);
    var left = Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct.create)(Data_Either.Left.create);
    var coproduct = function (f) {
        return function (g) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.either(f)(g))(runCoproduct);
        };
    };
    var foldableCoproduct = function (__dict_Foldable_309) {
        return function (__dict_Foldable_310) {
            return new Data_Foldable.Foldable(function (__dict_Monoid_311) {
                return function (f) {
                    return coproduct(Data_Foldable.foldMap(__dict_Foldable_309)(__dict_Monoid_311)(f))(Data_Foldable.foldMap(__dict_Foldable_310)(__dict_Monoid_311)(f));
                };
            }, function (f) {
                return function (z) {
                    return coproduct(Data_Foldable.foldl(__dict_Foldable_309)(f)(z))(Data_Foldable.foldl(__dict_Foldable_310)(f)(z));
                };
            }, function (f) {
                return function (z) {
                    return coproduct(Data_Foldable.foldr(__dict_Foldable_309)(f)(z))(Data_Foldable.foldr(__dict_Foldable_310)(f)(z));
                };
            });
        };
    };
    var functorCoproduct = function (__dict_Functor_312) {
        return function (__dict_Functor_313) {
            return new Prelude.Functor(function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct.create)(coproduct(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(Prelude["<$>"](__dict_Functor_312)(f)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude["<$>"](__dict_Functor_313)(f))));
            });
        };
    };
    var traversableCoproduct = function (__dict_Traversable_314) {
        return function (__dict_Traversable_315) {
            return new Data_Traversable.Traversable(function () {
                return foldableCoproduct(__dict_Traversable_314["__superclass_Data.Foldable.Foldable_1"]())(__dict_Traversable_315["__superclass_Data.Foldable.Foldable_1"]());
            }, function () {
                return functorCoproduct(__dict_Traversable_314["__superclass_Prelude.Functor_0"]())(__dict_Traversable_315["__superclass_Prelude.Functor_0"]());
            }, function (__dict_Applicative_317) {
                return coproduct(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_317["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct.create)(Data_Either.Left.create)))(Data_Traversable.sequence(__dict_Traversable_314)(__dict_Applicative_317)))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_317["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct.create)(Data_Either.Right.create)))(Data_Traversable.sequence(__dict_Traversable_315)(__dict_Applicative_317)));
            }, function (__dict_Applicative_316) {
                return function (f) {
                    return coproduct(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_316["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct.create)(Data_Either.Left.create)))(Data_Traversable.traverse(__dict_Traversable_314)(__dict_Applicative_316)(f)))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_316["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct.create)(Data_Either.Right.create)))(Data_Traversable.traverse(__dict_Traversable_315)(__dict_Applicative_316)(f)));
                };
            });
        };
    };
    return {
        Coproduct: Coproduct, 
        coproduct: coproduct, 
        foldableCoproduct: foldableCoproduct, 
        functorCoproduct: functorCoproduct, 
        left: left, 
        right: right, 
        runCoproduct: runCoproduct, 
        traversableCoproduct: traversableCoproduct
    };
})();
var PS = PS || {};
PS.Data_Inject = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Functor_Coproduct = PS.Data_Functor_Coproduct;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    function Inject(inj, prj) {
        this.inj = inj;
        this.prj = prj;
    };
    var prj = function (dict) {
        return dict.prj;
    };
    var injectReflexive = new Inject(Prelude.id(Prelude.categoryArr), Data_Maybe.Just.create);
    var injectLeft = new Inject(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Functor_Coproduct.Coproduct.create)(Data_Either.Left.create), Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value)));
    var inj = function (dict) {
        return dict.inj;
    };
    var injectRight = function (__dict_Inject_318) {
        return new Inject(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Functor_Coproduct.Coproduct.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(inj(__dict_Inject_318))), Data_Functor_Coproduct.coproduct(Prelude["const"](Data_Maybe.Nothing.value))(prj(__dict_Inject_318)));
    };
    return {
        Inject: Inject, 
        inj: inj, 
        injectLeft: injectLeft, 
        injectReflexive: injectReflexive, 
        injectRight: injectRight, 
        prj: prj
    };
})();
var PS = PS || {};
PS.Control_Monad_Free = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Coyoneda = PS.Data_Coyoneda;
    var Data_Either = PS.Data_Either;
    var Data_Inject = PS.Data_Inject;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    function Free(value0) {
        this.value0 = value0;
    };
    Free.create = function (value0) {
        return new Free(value0);
    };
    function Gosub(value0) {
        this.value0 = value0;
    };
    Gosub.create = function (value0) {
        return new Gosub(value0);
    };
    function MonadFree(wrap) {
        this.wrap = wrap;
    };
    
  function goEffImpl(resume, isRight, fromLeft, fromRight, fn, value) {
    return function(){
      while (true) {
        var r = resume(value);
        if (isRight(r)) return fromRight(r);
        value = fn(fromLeft(r))();
      }
    };
  };
    var wrap = function (dict) {
        return dict.wrap;
    };
    var unsafeRight = function (_361) {
        if (_361 instanceof Data_Either.Right) {
            return _361.value0;
        };
        throw new Error("Failed pattern match");
    };
    var unsafeLeft = function (_360) {
        if (_360 instanceof Data_Either.Left) {
            return _360.value0;
        };
        throw new Error("Failed pattern match");
    };
    var pureF = function (__dict_Applicative_321) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Free.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Applicative_321))(Pure.create));
    };
    var monadTransFree = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_322) {
        return function (f) {
            return Free.create(Prelude[">>="](__dict_Monad_322["__superclass_Prelude.Bind_1"]())(f)(function (_26) {
                return Prelude["return"](__dict_Monad_322)(new Pure(_26));
            }));
        };
    });
    var monadFreeFree = function (__dict_Functor_323) {
        return new MonadFree(Free.create);
    };
    var liftF = function (__dict_Functor_327) {
        return function (__dict_Monad_328) {
            return function (__dict_MonadFree_329) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(wrap(__dict_MonadFree_329))(Prelude["<$>"](__dict_Functor_327)(Prelude["return"](__dict_Monad_328)));
            };
        };
    };
    var iterM = function (__dict_Functor_331) {
        return function (__dict_Monad_332) {
            return function (_357) {
                return function (_358) {
                    if (_358 instanceof Pure) {
                        return Prelude["return"](__dict_Monad_332)(_358.value0);
                    };
                    if (_358 instanceof Free) {
                        return _357(Prelude["<$>"](__dict_Functor_331)(iterM(__dict_Functor_331)(__dict_Monad_332)(_357))(_358.value0));
                    };
                    if (_358 instanceof Gosub) {
                        return _358.value0(function (req) {
                            return function (recv) {
                                return Prelude[">>="](__dict_Monad_332["__superclass_Prelude.Bind_1"]())(iterM(__dict_Functor_331)(__dict_Monad_332)(_357)(req(Prelude.unit)))(Prelude["<<<"](Prelude.semigroupoidArr)(iterM(__dict_Functor_331)(__dict_Monad_332)(_357))(recv));
                            };
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var monadFree = function (__dict_Functor_324) {
        return new Prelude.Monad(function () {
            return applicativeFree(__dict_Functor_324);
        }, function () {
            return bindFree(__dict_Functor_324);
        });
    };
    var functorFree = function (__dict_Functor_339) {
        return new Prelude.Functor(function (_362) {
            return function (_363) {
                if (_363 instanceof Pure) {
                    return new Pure(_362(_363.value0));
                };
                return Prelude.liftA1(applicativeFree(__dict_Functor_339))(_362)(_363);
            };
        });
    };
    var bindFree = function (__dict_Functor_340) {
        return new Prelude.Bind(function (_364) {
            return function (_365) {
                if (_364 instanceof Gosub) {
                    return new Gosub(function (h) {
                        return _364.value0(function (a) {
                            return function (i) {
                                return h(a)(function (x) {
                                    return new Gosub(function (j) {
                                        return j(Prelude["const"](i(x)))(_365);
                                    });
                                });
                            };
                        });
                    });
                };
                return new Gosub(function (h) {
                    return h(Prelude["const"](_364))(_365);
                });
            };
        }, function () {
            return applyFree(__dict_Functor_340);
        });
    };
    var applyFree = function (__dict_Functor_341) {
        return new Prelude.Apply(Prelude.ap(monadFree(__dict_Functor_341)), function () {
            return functorFree(__dict_Functor_341);
        });
    };
    var applicativeFree = function (__dict_Functor_342) {
        return new Prelude.Applicative(function () {
            return applyFree(__dict_Functor_342);
        }, Pure.create);
    };
    var resumeGosub = function (__dict_Functor_319) {
        return function (_359) {
            if (_359 instanceof Gosub) {
                return _359.value0(function (a) {
                    return function (g) {
                        var _1120 = a(Prelude.unit);
                        if (_1120 instanceof Pure) {
                            return new Data_Either.Right(g(_1120.value0));
                        };
                        if (_1120 instanceof Free) {
                            return new Data_Either.Left(Prelude["<$>"](__dict_Functor_319)(function (h) {
                                return Prelude[">>="](bindFree(__dict_Functor_319))(h)(g);
                            })(_1120.value0));
                        };
                        if (_1120 instanceof Gosub) {
                            return new Data_Either.Right(_1120.value0(function (b) {
                                return function (i) {
                                    return Prelude[">>="](bindFree(__dict_Functor_319))(b(Prelude.unit))(function (x) {
                                        return Prelude[">>="](bindFree(__dict_Functor_319))(i(x))(g);
                                    });
                                };
                            }));
                        };
                        throw new Error("Failed pattern match");
                    };
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var resume = function (__copy___dict_Functor_320) {
        return function (__copy_f) {
            var __dict_Functor_320 = __copy___dict_Functor_320;
            var f = __copy_f;
            tco: while (true) {
                if (f instanceof Pure) {
                    return new Data_Either.Right(f.value0);
                };
                if (f instanceof Free) {
                    return new Data_Either.Left(f.value0);
                };
                var _1128 = resumeGosub(__dict_Functor_320)(f);
                if (_1128 instanceof Data_Either.Left) {
                    return new Data_Either.Left(_1128.value0);
                };
                if (_1128 instanceof Data_Either.Right) {
                    var __tco___dict_Functor_320 = __dict_Functor_320;
                    __dict_Functor_320 = __tco___dict_Functor_320;
                    f = _1128.value0;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var go = function (__copy___dict_Functor_338) {
        return function (__copy_fn) {
            return function (__copy_f) {
                var __dict_Functor_338 = __copy___dict_Functor_338;
                var fn = __copy_fn;
                var f = __copy_f;
                tco: while (true) {
                    var _1131 = resume(__dict_Functor_338)(f);
                    if (_1131 instanceof Data_Either.Left) {
                        var __tco___dict_Functor_338 = __dict_Functor_338;
                        var __tco_fn = fn;
                        var __tco_f = fn(_1131.value0);
                        __dict_Functor_338 = __tco___dict_Functor_338;
                        fn = __tco_fn;
                        f = __tco_f;
                        continue tco;
                    };
                    if (_1131 instanceof Data_Either.Right) {
                        return _1131.value0;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var goEff = function (__dict_Functor_337) {
        return function (fn) {
            return function (f) {
                return goEffImpl(resume(__dict_Functor_337), Data_Either.isRight, unsafeLeft, unsafeRight, fn, f);
            };
        };
    };
    var goEffC = function (nat) {
        return goEff(Data_Coyoneda.functorCoyoneda)(Data_Coyoneda.liftCoyonedaTF(Control_Monad_Eff.functorEff)(nat));
    };
    var goM = function (__dict_Functor_334) {
        return function (__dict_Monad_335) {
            return function (k) {
                return function (f) {
                    var _1134 = resume(__dict_Functor_334)(f);
                    if (_1134 instanceof Data_Either.Left) {
                        return Prelude[">>="](__dict_Monad_335["__superclass_Prelude.Bind_1"]())(k(_1134.value0))(goM(__dict_Functor_334)(__dict_Monad_335)(k));
                    };
                    if (_1134 instanceof Data_Either.Right) {
                        return Prelude["return"](__dict_Monad_335)(_1134.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var goMC = function (__dict_Monad_336) {
        return function (nat) {
            return goM(Data_Coyoneda.functorCoyoneda)(__dict_Monad_336)(Data_Coyoneda.liftCoyonedaTF(((__dict_Monad_336["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(nat));
        };
    };
    var mapF = function (__dict_Functor_325) {
        return function (__dict_Functor_326) {
            return function (t) {
                return function (fa) {
                    return Data_Either.either(function (s) {
                        return Prelude["<<<"](Prelude.semigroupoidArr)(Free.create)(t)(Prelude["<$>"](__dict_Functor_325)(mapF(__dict_Functor_325)(__dict_Functor_326)(t))(s));
                    })(Pure.create)(resume(__dict_Functor_325)(fa));
                };
            };
        };
    };
    var injC = function (__dict_Inject_333) {
        return mapF(Data_Coyoneda.functorCoyoneda)(Data_Coyoneda.functorCoyoneda)(Data_Coyoneda.liftCoyonedaT(Data_Inject.inj(__dict_Inject_333)));
    };
    var liftFC = Prelude["<<<"](Prelude.semigroupoidArr)(liftF(Data_Coyoneda.functorCoyoneda)(monadFree(Data_Coyoneda.functorCoyoneda))(monadFreeFree(Data_Coyoneda.functorCoyoneda)))(Data_Coyoneda.liftCoyoneda);
    var pureFC = function (__dict_Applicative_330) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(liftFC)(Prelude.pure(__dict_Applicative_330));
    };
    return {
        Free: Free, 
        Gosub: Gosub, 
        MonadFree: MonadFree, 
        Pure: Pure, 
        applicativeFree: applicativeFree, 
        applyFree: applyFree, 
        bindFree: bindFree, 
        functorFree: functorFree, 
        go: go, 
        goEff: goEff, 
        goEffC: goEffC, 
        goM: goM, 
        goMC: goMC, 
        injC: injC, 
        iterM: iterM, 
        liftF: liftF, 
        liftFC: liftFC, 
        mapF: mapF, 
        monadFree: monadFree, 
        monadFreeFree: monadFreeFree, 
        monadTransFree: monadTransFree, 
        pureF: pureF, 
        pureFC: pureFC, 
        wrap: wrap
    };
})();
var PS = PS || {};
PS.Control_Monad_Trampoline = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var suspend = function (t) {
        return new Control_Monad_Free.Free(Data_Lazy.defer(Prelude["const"](t)));
    };
    var runTrampoline = Control_Monad_Free.go(Data_Lazy.functorLazy)(Data_Lazy.force);
    var done = Prelude.pure(Control_Monad_Free.applicativeFree(Data_Lazy.functorLazy));
    var delay$prime = function (a) {
        return new Control_Monad_Free.Free(Prelude["<$>"](Data_Lazy.functorLazy)(done)(a));
    };
    var delay = Prelude["<<<"](Prelude.semigroupoidArr)(delay$prime)(Data_Lazy.defer);
    return {
        delay: delay, 
        "delay'": delay$prime, 
        done: done, 
        runTrampoline: runTrampoline, 
        suspend: suspend
    };
})();
var PS = PS || {};
PS.Control_Comonad_Cofree = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Cofree(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cofree.create = function (value0) {
        return function (value1) {
            return new Cofree(value0, value1);
        };
    };
    var tail = function (_367) {
        return Control_Monad_Trampoline.runTrampoline(_367.value1);
    };
    var mkCofree = function (a) {
        return function (t) {
            return new Cofree(a, Prelude.pure(Control_Monad_Free.applicativeFree(Data_Lazy.functorLazy))(t));
        };
    };
    var head = function (_366) {
        return _366.value0;
    };
    var foldableCofree = function (__dict_Foldable_347) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_348) {
            return function (f) {
                var go = function (fa) {
                    return Prelude["++"](__dict_Monoid_348["__superclass_Prelude.Semigroup_0"]())(f(head(fa)))(Data_Foldable.foldMap(__dict_Foldable_347)(__dict_Monoid_348)(go)(tail(fa)));
                };
                return go;
            };
        }, function (f) {
            var go = function (b) {
                return function (fa) {
                    var fa$prime = tail(fa);
                    var b$prime = f(b)(head(fa));
                    return Data_Foldable.foldl(__dict_Foldable_347)(go)(b$prime)(fa$prime);
                };
            };
            return go;
        }, function (f) {
            var go = function (fa) {
                return function (b) {
                    var b$prime = Data_Foldable.foldr(__dict_Foldable_347)(go)(b)(tail(fa));
                    var a$prime = head(fa);
                    return f(a$prime)(b$prime);
                };
            };
            return Prelude.flip(go);
        });
    };
    var _tail = function (_368) {
        return _368.value1;
    };
    var _lift = function (__dict_Functor_353) {
        return function (f) {
            return Prelude["<$>"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Prelude["<$>"](__dict_Functor_353)(f));
        };
    };
    var functorCofree = function (__dict_Functor_355) {
        return new Prelude.Functor(function (f) {
            var loop = function (fa) {
                return new Cofree(f(head(fa)), _lift(__dict_Functor_355)(loop)(_tail(fa)));
            };
            return loop;
        });
    };
    var applyCofree = function (__dict_Apply_351) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                var t = Prelude["<*>"](__dict_Apply_351)(Prelude["<$>"](__dict_Apply_351["__superclass_Prelude.Functor_0"]())(Prelude["<*>"](applyCofree(__dict_Apply_351)))(tail(f)))(tail(x));
                var h = head(f)(head(x));
                return mkCofree(h)(t);
            };
        }, function () {
            return functorCofree(__dict_Apply_351["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeCofree = function (__dict_Applicative_352) {
        return new Prelude.Applicative(function () {
            return applyCofree(__dict_Applicative_352["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return mkCofree(a)(Prelude.pure(__dict_Applicative_352)(Prelude.pure(applicativeCofree(__dict_Applicative_352))(a)));
        });
    };
    var bindCofree = function (__dict_MonadPlus_350) {
        return new Prelude.Bind(function (fa) {
            return function (f) {
                var loop = function (fa_1) {
                    var fh = f(head(fa_1));
                    return mkCofree(head(fh))(Control_Alt["<|>"](((__dict_MonadPlus_350["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(tail(fh))(Prelude["<$>"]((((__dict_MonadPlus_350["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(loop)(tail(fa_1))));
                };
                return loop(fa);
            };
        }, function () {
            return applyCofree(((__dict_MonadPlus_350["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
        });
    };
    var monadCofree = function (__dict_MonadPlus_343) {
        return new Prelude.Monad(function () {
            return applicativeCofree((__dict_MonadPlus_343["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCofree(__dict_MonadPlus_343);
        });
    };
    var extendCofree = function (__dict_Functor_354) {
        return new Control_Extend.Extend(function (f) {
            var loop = function (fa) {
                return new Cofree(f(fa), _lift(__dict_Functor_354)(loop)(_tail(fa)));
            };
            return loop;
        }, function () {
            return functorCofree(__dict_Functor_354);
        });
    };
    var comonadCofree = function (__dict_Functor_349) {
        return new Control_Comonad.Comonad(function () {
            return extendCofree(__dict_Functor_349);
        }, head);
    };
    var traversableCofree = function (__dict_Traversable_344) {
        return new Data_Traversable.Traversable(function () {
            return foldableCofree(__dict_Traversable_344["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCofree(__dict_Traversable_344["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_346) {
            return Data_Traversable.traverse(traversableCofree(__dict_Traversable_344))(__dict_Applicative_346)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_345) {
            return function (f) {
                var loop = function (ta) {
                    return Prelude["<*>"](__dict_Applicative_345["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_345["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(mkCofree)(f(head(ta))))(Data_Traversable.traverse(__dict_Traversable_344)(__dict_Applicative_345)(loop)(tail(ta)));
                };
                return loop;
            };
        });
    };
    return {
        applicativeCofree: applicativeCofree, 
        applyCofree: applyCofree, 
        bindCofree: bindCofree, 
        comonadCofree: comonadCofree, 
        extendCofree: extendCofree, 
        foldableCofree: foldableCofree, 
        functorCofree: functorCofree, 
        head: head, 
        mkCofree: mkCofree, 
        monadCofree: monadCofree, 
        tail: tail, 
        traversableCofree: traversableCofree
    };
})();
var PS = PS || {};
PS.Graphics_Canvas_Free = (function () {
    "use strict";
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Prelude = PS.Prelude;
    var Graphics_Canvas = PS.Graphics_Canvas;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    function SetLineWidth(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetLineWidth.create = function (value0) {
        return function (value1) {
            return new SetLineWidth(value0, value1);
        };
    };
    function SetFillStyle(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetFillStyle.create = function (value0) {
        return function (value1) {
            return new SetFillStyle(value0, value1);
        };
    };
    function SetStrokeStyle(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetStrokeStyle.create = function (value0) {
        return function (value1) {
            return new SetStrokeStyle(value0, value1);
        };
    };
    function SetShadowColor(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetShadowColor.create = function (value0) {
        return function (value1) {
            return new SetShadowColor(value0, value1);
        };
    };
    function SetShadowBlur(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetShadowBlur.create = function (value0) {
        return function (value1) {
            return new SetShadowBlur(value0, value1);
        };
    };
    function SetShadowOffsetX(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetShadowOffsetX.create = function (value0) {
        return function (value1) {
            return new SetShadowOffsetX(value0, value1);
        };
    };
    function SetShadowOffsetY(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetShadowOffsetY.create = function (value0) {
        return function (value1) {
            return new SetShadowOffsetY(value0, value1);
        };
    };
    function SetLineCap(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetLineCap.create = function (value0) {
        return function (value1) {
            return new SetLineCap(value0, value1);
        };
    };
    function SetComposite(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetComposite.create = function (value0) {
        return function (value1) {
            return new SetComposite(value0, value1);
        };
    };
    function SetAlpha(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetAlpha.create = function (value0) {
        return function (value1) {
            return new SetAlpha(value0, value1);
        };
    };
    function BeginPath(value0) {
        this.value0 = value0;
    };
    BeginPath.create = function (value0) {
        return new BeginPath(value0);
    };
    function Stroke(value0) {
        this.value0 = value0;
    };
    Stroke.create = function (value0) {
        return new Stroke(value0);
    };
    function Fill(value0) {
        this.value0 = value0;
    };
    Fill.create = function (value0) {
        return new Fill(value0);
    };
    function Clip(value0) {
        this.value0 = value0;
    };
    Clip.create = function (value0) {
        return new Clip(value0);
    };
    function LineTo(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    LineTo.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new LineTo(value0, value1, value2);
            };
        };
    };
    function MoveTo(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    MoveTo.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new MoveTo(value0, value1, value2);
            };
        };
    };
    function ClosePath(value0) {
        this.value0 = value0;
    };
    ClosePath.create = function (value0) {
        return new ClosePath(value0);
    };
    function Arc(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Arc.create = function (value0) {
        return function (value1) {
            return new Arc(value0, value1);
        };
    };
    function Rect(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Rect.create = function (value0) {
        return function (value1) {
            return new Rect(value0, value1);
        };
    };
    function Scale(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Scale.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Scale(value0, value1, value2);
            };
        };
    };
    function Rotate(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Rotate.create = function (value0) {
        return function (value1) {
            return new Rotate(value0, value1);
        };
    };
    function Translate(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Translate.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Translate(value0, value1, value2);
            };
        };
    };
    function Transform(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Transform.create = function (value0) {
        return function (value1) {
            return new Transform(value0, value1);
        };
    };
    function SetFont(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetFont.create = function (value0) {
        return function (value1) {
            return new SetFont(value0, value1);
        };
    };
    function FillText(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    FillText.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new FillText(value0, value1, value2, value3);
                };
            };
        };
    };
    function StrokeText(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    StrokeText.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new StrokeText(value0, value1, value2, value3);
                };
            };
        };
    };
    function MeasureText(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MeasureText.create = function (value0) {
        return function (value1) {
            return new MeasureText(value0, value1);
        };
    };
    function Save(value0) {
        this.value0 = value0;
    };
    Save.create = function (value0) {
        return new Save(value0);
    };
    function Restore(value0) {
        this.value0 = value0;
    };
    Restore.create = function (value0) {
        return new Restore(value0);
    };
    function GetImageData(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    GetImageData.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new GetImageData(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    function PutImageData(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    PutImageData.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new PutImageData(value0, value1, value2, value3);
                };
            };
        };
    };
    var translate = function (tx) {
        return function (ty) {
            return Control_Monad_Free.liftFC(new Translate(tx, ty, Prelude.unit));
        };
    };
    var transform = function (tx) {
        return Control_Monad_Free.liftFC(new Transform(tx, Prelude.unit));
    };
    var strokeText = function (s) {
        return function (x) {
            return function (y) {
                return Control_Monad_Free.liftFC(new StrokeText(s, x, y, Prelude.unit));
            };
        };
    };
    var stroke = Control_Monad_Free.liftFC(new Stroke(Prelude.unit));
    var setStrokeStyle = function (s) {
        return Control_Monad_Free.liftFC(new SetStrokeStyle(s, Prelude.unit));
    };
    var setShadowOffsetY = function (n) {
        return Control_Monad_Free.liftFC(new SetShadowOffsetY(n, Prelude.unit));
    };
    var setShadowOffsetX = function (n) {
        return Control_Monad_Free.liftFC(new SetShadowOffsetX(n, Prelude.unit));
    };
    var setShadowColor = function (c) {
        return Control_Monad_Free.liftFC(new SetShadowColor(c, Prelude.unit));
    };
    var setShadowBlur = function (n) {
        return Control_Monad_Free.liftFC(new SetShadowBlur(n, Prelude.unit));
    };
    var setLineWidth = function (w) {
        return Control_Monad_Free.liftFC(new SetLineWidth(w, Prelude.unit));
    };
    var setLineCap = function (lc) {
        return Control_Monad_Free.liftFC(new SetLineCap(lc, Prelude.unit));
    };
    var setFont = function (f) {
        return Control_Monad_Free.liftFC(new SetFont(f, Prelude.unit));
    };
    var setFillStyle = function (s) {
        return Control_Monad_Free.liftFC(new SetFillStyle(s, Prelude.unit));
    };
    var setComposite = function (c) {
        return Control_Monad_Free.liftFC(new SetComposite(c, Prelude.unit));
    };
    var setAlpha = function (a) {
        return Control_Monad_Free.liftFC(new SetAlpha(a, Prelude.unit));
    };
    var scale = function (sx) {
        return function (sy) {
            return Control_Monad_Free.liftFC(new Scale(sx, sy, Prelude.unit));
        };
    };
    var save = Control_Monad_Free.liftFC(new Save(Prelude.unit));
    var rotate = function (th) {
        return Control_Monad_Free.liftFC(new Rotate(th, Prelude.unit));
    };
    var restore = Control_Monad_Free.liftFC(new Restore(Prelude.unit));
    var rect = function (r) {
        return Control_Monad_Free.liftFC(new Rect(r, Prelude.unit));
    };
    var putImageData = function (d) {
        return function (x) {
            return function (y) {
                return Control_Monad_Free.liftFC(new PutImageData(d, x, y, Prelude.unit));
            };
        };
    };
    var moveTo = function (x) {
        return function (y) {
            return Control_Monad_Free.liftFC(new MoveTo(x, y, Prelude.unit));
        };
    };
    var measureText = function (s) {
        return Control_Monad_Free.liftFC(new MeasureText(s, Prelude.id(Prelude.categoryArr)));
    };
    var lineTo = function (x) {
        return function (y) {
            return Control_Monad_Free.liftFC(new LineTo(x, y, Prelude.unit));
        };
    };
    var getImageData = function (x) {
        return function (y) {
            return function (w) {
                return function (h) {
                    return Control_Monad_Free.liftFC(new GetImageData(x, y, w, h, Prelude.id(Prelude.categoryArr)));
                };
            };
        };
    };
    var fillText = function (s) {
        return function (x) {
            return function (y) {
                return Control_Monad_Free.liftFC(new FillText(s, x, y, Prelude.unit));
            };
        };
    };
    var fill = Control_Monad_Free.liftFC(new Fill(Prelude.unit));
    var closePath = Control_Monad_Free.liftFC(new ClosePath(Prelude.unit));
    var clip = Control_Monad_Free.liftFC(new Clip(Prelude.unit));
    var beginPath = Control_Monad_Free.liftFC(new BeginPath(Prelude.unit));
    var arc = function (a) {
        return Control_Monad_Free.liftFC(new Arc(a, Prelude.unit));
    };
    var runGraphics = function (ctx) {
        var interp = function (_369) {
            if (_369 instanceof SetLineWidth) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setLineWidth(_369.value0)(ctx));
            };
            if (_369 instanceof SetFillStyle) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setFillStyle(_369.value0)(ctx));
            };
            if (_369 instanceof SetStrokeStyle) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setStrokeStyle(_369.value0)(ctx));
            };
            if (_369 instanceof SetShadowColor) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setShadowColor(_369.value0)(ctx));
            };
            if (_369 instanceof SetShadowBlur) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setShadowBlur(_369.value0)(ctx));
            };
            if (_369 instanceof SetShadowOffsetX) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setShadowOffsetX(_369.value0)(ctx));
            };
            if (_369 instanceof SetShadowOffsetY) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setShadowOffsetY(_369.value0)(ctx));
            };
            if (_369 instanceof SetLineCap) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setLineCap(_369.value0)(ctx));
            };
            if (_369 instanceof SetComposite) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setGlobalCompositeOperation(ctx)(_369.value0));
            };
            if (_369 instanceof SetAlpha) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setGlobalAlpha(ctx)(_369.value0));
            };
            if (_369 instanceof BeginPath) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value0))(Graphics_Canvas.beginPath(ctx));
            };
            if (_369 instanceof Stroke) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value0))(Graphics_Canvas.stroke(ctx));
            };
            if (_369 instanceof Fill) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value0))(Graphics_Canvas.fill(ctx));
            };
            if (_369 instanceof Clip) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value0))(Graphics_Canvas.clip(ctx));
            };
            if (_369 instanceof LineTo) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value2))(Graphics_Canvas.lineTo(ctx)(_369.value0)(_369.value1));
            };
            if (_369 instanceof MoveTo) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value2))(Graphics_Canvas.moveTo(ctx)(_369.value0)(_369.value1));
            };
            if (_369 instanceof ClosePath) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value0))(Graphics_Canvas.closePath(ctx));
            };
            if (_369 instanceof Arc) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.arc(ctx)(_369.value0));
            };
            if (_369 instanceof Rect) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.rect(ctx)(_369.value0));
            };
            if (_369 instanceof Scale) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value2))(Graphics_Canvas.scale({
                    scaleX: _369.value0, 
                    scaleY: _369.value1
                })(ctx));
            };
            if (_369 instanceof Rotate) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.rotate(_369.value0)(ctx));
            };
            if (_369 instanceof Translate) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value2))(Graphics_Canvas.translate({
                    translateX: _369.value0, 
                    translateY: _369.value1
                })(ctx));
            };
            if (_369 instanceof Transform) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.transform(_369.value0)(ctx));
            };
            if (_369 instanceof SetFont) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value1))(Graphics_Canvas.setFont(_369.value0)(ctx));
            };
            if (_369 instanceof FillText) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value3))(Graphics_Canvas.fillText(ctx)(_369.value0)(_369.value1)(_369.value2));
            };
            if (_369 instanceof StrokeText) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value3))(Graphics_Canvas.strokeText(ctx)(_369.value0)(_369.value1)(_369.value2));
            };
            if (_369 instanceof MeasureText) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(_369.value1)(Graphics_Canvas.measureText(ctx)(_369.value0));
            };
            if (_369 instanceof Save) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value0))(Graphics_Canvas.save(ctx));
            };
            if (_369 instanceof Restore) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value0))(Graphics_Canvas.restore(ctx));
            };
            if (_369 instanceof GetImageData) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(_369.value4)(Graphics_Canvas.getImageData(ctx)(_369.value0)(_369.value1)(_369.value2)(_369.value3));
            };
            if (_369 instanceof PutImageData) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](_369.value3))(Graphics_Canvas.putImageData(ctx)(_369.value0)(_369.value1)(_369.value2));
            };
            throw new Error("Failed pattern match");
        };
        return Control_Monad_Free.goEffC(interp);
    };
    return {
        arc: arc, 
        beginPath: beginPath, 
        clip: clip, 
        closePath: closePath, 
        fill: fill, 
        fillText: fillText, 
        getImageData: getImageData, 
        lineTo: lineTo, 
        measureText: measureText, 
        moveTo: moveTo, 
        putImageData: putImageData, 
        rect: rect, 
        restore: restore, 
        rotate: rotate, 
        runGraphics: runGraphics, 
        save: save, 
        scale: scale, 
        setAlpha: setAlpha, 
        setComposite: setComposite, 
        setFillStyle: setFillStyle, 
        setFont: setFont, 
        setLineCap: setLineCap, 
        setLineWidth: setLineWidth, 
        setShadowBlur: setShadowBlur, 
        setShadowColor: setShadowColor, 
        setShadowOffsetX: setShadowOffsetX, 
        setShadowOffsetY: setShadowOffsetY, 
        setStrokeStyle: setStrokeStyle, 
        stroke: stroke, 
        strokeText: strokeText, 
        transform: transform, 
        translate: translate
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Graphics_Canvas_Free = PS.Graphics_Canvas_Free;
    var Math = PS.Math;
    var Graphics_Canvas = PS.Graphics_Canvas;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Coyoneda = PS.Data_Coyoneda;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var yellow = "#FFFF00";
    var triangle = Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.moveTo(0)(-100))(function () {
        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.lineTo(75)(100))(function () {
            return Graphics_Canvas_Free.lineTo(-75)(100);
        });
    });
    var red = "#FF0000";
    var bauble = function (size) {
        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.beginPath)(function () {
            return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.arc({
                x: 0, 
                y: 0, 
                r: size, 
                start: 0, 
                end: Math.pi * 2
            }))(function () {
                return Graphics_Canvas_Free.fill;
            });
        });
    };
    var at = function (x) {
        return function (y) {
            return function (gfx) {
                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.save)(function () {
                    return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.translate(x)(y))(function () {
                        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(gfx)(function () {
                            return Graphics_Canvas_Free.restore;
                        });
                    });
                });
            };
        };
    };
    var main = function __do() {
        var _28 = Graphics_Canvas.getCanvasElementById("canvas")();
        var _27 = Graphics_Canvas.getContext2D(_28)();
        return Graphics_Canvas_Free.runGraphics(_27)(Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setFillStyle("#EEFFEE"))(function () {
            return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.rect({
                x: 0, 
                y: 0, 
                w: 400, 
                h: 600
            }))(function () {
                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.fill)(function () {
                    return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setShadowColor("#BBDDBB"))(function () {
                        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setShadowBlur(5))(function () {
                            return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(200)(175)(Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setFillStyle("#CCDDCC"))(function () {
                                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.beginPath)(function () {
                                    return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(triangle)(function () {
                                        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(0)(50)(triangle))(function () {
                                            return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(0)(100)(triangle))(function () {
                                                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.closePath)(function () {
                                                    return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.rect({
                                                        x: -40, 
                                                        y: 200, 
                                                        w: 80, 
                                                        h: 50
                                                    }))(function () {
                                                        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.fill)(function () {
                                                            return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setFillStyle("#EEFFEE"))(function () {
                                                                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(-10)(-10)(bauble(10)))(function () {
                                                                    return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(-20)(50)(bauble(10)))(function () {
                                                                        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(0)(100)(bauble(10)))(function () {
                                                                            return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(-20)(140)(bauble(10)))(function () {
                                                                                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(20)(190)(bauble(7)))(function () {
                                                                                    return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(30)(50)(bauble(7)))(function () {
                                                                                        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(-50)(75)(bauble(7)))(function () {
                                                                                            return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(-40)(180)(bauble(7)))(function () {
                                                                                                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(at(50)(125)(bauble(7)))(function () {
                                                                                                    return at(40)(175)(bauble(7));
                                                                                                });
                                                                                            });
                                                                                        });
                                                                                    });
                                                                                });
                                                                            });
                                                                        });
                                                                    });
                                                                });
                                                            });
                                                        });
                                                    });
                                                });
                                            });
                                        });
                                    });
                                });
                            })))(function () {
                                return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setFillStyle("#008000"))(function () {
                                    return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.setFont("48px Sans-Serif"))(function () {
                                        return Prelude[">>="](Control_Monad_Free.bindFree(Data_Coyoneda.functorCoyoneda))(Graphics_Canvas_Free.fillText("Merry Christmas")(25)(50))(function () {
                                            return Graphics_Canvas_Free.fillText("From PureScript!")(20)(480);
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        }))();
    };
    return {
        at: at, 
        bauble: bauble, 
        main: main, 
        red: red, 
        triangle: triangle, 
        yellow: yellow
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Identity = {
        create: function (value) {
            return value;
        }
    };
    var showConst = function (__dict_Show_358) {
        return new Prelude.Show(function (_375) {
            return "Identity (" + (Prelude.show(__dict_Show_358)(_375) + ")");
        });
    };
    var runIdentity = function (_370) {
        return _370;
    };
    var functorIdentity = new Prelude.Functor(function (_376) {
        return function (_377) {
            return _376(_377);
        };
    });
    var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_360) {
        return function (_387) {
            return function (_388) {
                return _387(_388);
            };
        };
    }, function (_384) {
        return function (_385) {
            return function (_386) {
                return _384(_385)(_386);
            };
        };
    }, function (_381) {
        return function (_382) {
            return function (_383) {
                return _381(_383)(_382);
            };
        };
    });
    var traversableIdentity = new Data_Traversable.Traversable(function () {
        return foldableIdentity;
    }, function () {
        return functorIdentity;
    }, function (__dict_Applicative_357) {
        return function (_391) {
            return Prelude["<$>"]((__dict_Applicative_357["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_391);
        };
    }, function (__dict_Applicative_356) {
        return function (_389) {
            return function (_390) {
                return Prelude["<$>"]((__dict_Applicative_356["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_389(_390));
            };
        };
    });
    var extendIdentity = new Control_Extend.Extend(function (f) {
        return function (m) {
            return f(m);
        };
    }, function () {
        return functorIdentity;
    });
    var eqIdentity = function (__dict_Eq_361) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqIdentity(__dict_Eq_361))(x)(y);
            };
        }, function (_371) {
            return function (_372) {
                return Prelude["=="](__dict_Eq_361)(_371)(_372);
            };
        });
    };
    var ordIdentity = function (__dict_Ord_359) {
        return new Prelude.Ord(function () {
            return eqIdentity(__dict_Ord_359["__superclass_Prelude.Eq_0"]());
        }, function (_373) {
            return function (_374) {
                return Prelude.compare(__dict_Ord_359)(_373)(_374);
            };
        });
    };
    var comonadIdentity = new Control_Comonad.Comonad(function () {
        return extendIdentity;
    }, function (_380) {
        return _380;
    });
    var applyIdentity = new Prelude.Apply(function (_378) {
        return function (_379) {
            return _378(_379);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity.create);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        applicativeIdentity: applicativeIdentity, 
        applyIdentity: applyIdentity, 
        bindIdentity: bindIdentity, 
        comonadIdentity: comonadIdentity, 
        eqIdentity: eqIdentity, 
        extendIdentity: extendIdentity, 
        foldableIdentity: foldableIdentity, 
        functorIdentity: functorIdentity, 
        monadIdentity: monadIdentity, 
        ordIdentity: ordIdentity, 
        runIdentity: runIdentity, 
        showConst: showConst, 
        traversableIdentity: traversableIdentity
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var withEnv = Control_Comonad_Env_Trans.withEnvT;
    var runEnv = function (x) {
        return Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Control_Comonad_Env_Trans.runEnvT(x));
    };
    var mapEnv = Prelude["<$>"](Control_Comonad_Env_Trans.functorEnvT(Data_Identity.functorIdentity));
    var env = function (e) {
        return function (a) {
            return Control_Comonad_Env_Trans.EnvT.create(Data_Tuple.Tuple.create(e)(a));
        };
    };
    return {
        env: env, 
        mapEnv: mapEnv, 
        runEnv: runEnv, 
        withEnv: withEnv
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Class = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    function ComonadEnv(__superclass_Control$dotComonad$dotComonad_0, ask, local) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.ask = ask;
        this.local = local;
    };
    var local = function (dict) {
        return dict.local;
    };
    var comonadEnvTuple = new ComonadEnv(function () {
        return Data_Tuple.comonadTuple;
    }, Data_Tuple.fst, function (_392) {
        return function (_393) {
            return new Data_Tuple.Tuple(_392(_393.value0), _393.value1);
        };
    });
    var comonadEnvEnvT = function (__dict_Comonad_362) {
        return new ComonadEnv(function () {
            return Control_Comonad_Env_Trans.comonadEnvT(__dict_Comonad_362);
        }, function (x) {
            return Data_Tuple.fst(Control_Comonad_Env_Trans.runEnvT(x));
        }, function (f) {
            return function (x) {
                return Control_Comonad_Env_Trans.EnvT.create((function () {
                    var _1243 = Control_Comonad_Env_Trans.runEnvT(x);
                    return new Data_Tuple.Tuple(f(_1243.value0), _1243.value1);
                })());
            };
        });
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var asks = function (__dict_ComonadEnv_363) {
        return function (f) {
            return function (x) {
                return f(ask(__dict_ComonadEnv_363)(x));
            };
        };
    };
    return {
        ComonadEnv: ComonadEnv, 
        ask: ask, 
        asks: asks, 
        comonadEnvEnvT: comonadEnvEnvT, 
        comonadEnvTuple: comonadEnvTuple, 
        local: local
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Prelude = PS.Prelude;
    var store = function (f) {
        return function (x) {
            return Control_Comonad_Store_Trans.StoreT.create(new Data_Tuple.Tuple(f, x));
        };
    };
    var runStore = function (s) {
        return Data_Tuple.swap(Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Data_Tuple.swap(Control_Comonad_Store_Trans.runStoreT(s))));
    };
    return {
        runStore: runStore, 
        store: store
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced = (function () {
    "use strict";
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    var traced = Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Control_Comonad_Traced_Trans.TracedT.create);
    var runTraced = Prelude[">>>"](Prelude.semigroupoidArr)(Control_Comonad_Traced_Trans.runTracedT)(Data_Identity.runIdentity);
    return {
        runTraced: runTraced, 
        traced: traced
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var writer = function (__dict_Applicative_364) {
        return function (_397) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_364)({
                        state: s, 
                        result: _397.value0, 
                        log: _397.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_365) {
        return function (w) {
            return writer(__dict_Applicative_365)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    var state = function (__dict_Applicative_366) {
        return function (__dict_Monoid_367) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _1249 = f(s);
                        return Prelude.pure(__dict_Applicative_366)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_367)(_1249.value1)(_1249.value0)(Data_Monoid.mempty(__dict_Monoid_367)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Data_Identity.monadIdentity)(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_368) {
        return function (__dict_Monoid_369) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_368)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_369)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_369)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_370) {
        return function (__dict_Monoid_371) {
            return function (s) {
                return state(__dict_Applicative_370)(__dict_Monoid_371)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_372) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_372["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_395) {
                        return Prelude.pure(__dict_Monad_372["__superclass_Prelude.Applicative_0"]())({
                            state: _395.state, 
                            result: _395.result.value0, 
                            log: _395.result.value1(_395.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_373) {
        return function (__dict_Monoid_374) {
            return function (f) {
                return state(__dict_Applicative_373)(__dict_Monoid_374)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr)(f)(Data_Identity.Identity.create)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_375) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_375["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_396) {
                            return Prelude.pure(__dict_Monad_375["__superclass_Prelude.Applicative_0"]())({
                                state: _396.state, 
                                result: new Data_Tuple.Tuple(_396.result, f(_396.log)), 
                                log: _396.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_376) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_376["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_394) {
                        return Prelude.pure(__dict_Monad_376["__superclass_Prelude.Applicative_0"]())({
                            state: _394.state, 
                            result: new Data_Tuple.Tuple(_394.result, _394.log), 
                            log: _394.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_377) {
        return function (__dict_Monoid_378) {
            return function (f) {
                return state(__dict_Applicative_377)(__dict_Monoid_378)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_379) {
        return function (__dict_Monoid_380) {
            return state(__dict_Applicative_379)(__dict_Monoid_380)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_381) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_381["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_381["__superclass_Prelude.Applicative_0"]())((function () {
                                var _1266 = {};
                                for (var _1267 in see) {
                                    if (see.hasOwnProperty(_1267)) {
                                        _1266[_1267] = see[_1267];
                                    };
                                };
                                _1266.log = f(see.log);
                                return _1266;
                            })());
                        });
                    };
                };
            };
        };
    };
    var ask = function (__dict_Applicative_382) {
        return function (__dict_Monoid_383) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_382)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_383)(s)(r)(Data_Monoid.mempty(__dict_Monoid_383)));
                };
            };
        };
    };
    return {
        ask: ask, 
        censor: censor, 
        evalRWS: evalRWS, 
        execRWS: execRWS, 
        get: get, 
        gets: gets, 
        listen: listen, 
        listens: listens, 
        local: local, 
        mapRWS: mapRWS, 
        modify: modify, 
        pass: pass, 
        put: put, 
        reader: reader, 
        runRWS: runRWS, 
        rws: rws, 
        state: state, 
        tell: tell, 
        withRWS: withRWS, 
        writer: writer
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    function MonadReader(ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_384) {
        return new MonadReader(Prelude["return"](__dict_Monad_384), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_385) {
        return function (__dict_Monoid_386) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_385["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_386), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = new MonadReader(Prelude.id(Prelude.categoryArr), Prelude[">>>"](Prelude.semigroupoidArr));
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_387) {
        return function (__dict_Error_388) {
            return function (__dict_MonadReader_389) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_388))(__dict_Monad_387)(ask(__dict_MonadReader_389)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_389)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_390) {
        return function (__dict_MonadReader_391) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_390)(ask(__dict_MonadReader_391)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_391)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_392) {
        return function (__dict_MonadReader_393) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_392)(ask(__dict_MonadReader_393)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_393)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_394) {
        return function (__dict_Monoid_395) {
            return function (__dict_MonadReader_396) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_395))(__dict_Monad_394)(ask(__dict_MonadReader_396)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_396)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_397) {
        return function (__dict_MonadReader_398) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_397["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_398))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_397))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        ask: ask, 
        local: local, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderFun: monadReaderFun, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderRWST: monadReaderRWST, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderWriterT: monadReaderWriterT, 
        reader: reader
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadState(state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_399) {
        return function (__dict_MonadState_400) {
            return function (s) {
                return state(__dict_MonadState_400)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_401) {
        return function (__dict_Monoid_402) {
            return function (__dict_MonadState_403) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_402))(__dict_Monad_401)(state(__dict_MonadState_403)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_404) {
        return function (__dict_MonadState_405) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_404)(state(__dict_MonadState_405)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_406) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_406))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_407) {
        return function (__dict_MonadState_408) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_407)(state(__dict_MonadState_408)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_409) {
        return function (__dict_Monoid_410) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_409["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_410));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_411) {
        return function (__dict_MonadState_412) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_411)(state(__dict_MonadState_412)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_413) {
        return function (__dict_Error_414) {
            return function (__dict_MonadState_415) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_414))(__dict_Monad_413)(state(__dict_MonadState_415)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_416) {
        return function (__dict_MonadState_417) {
            return function (f) {
                return state(__dict_MonadState_417)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_418) {
        return function (__dict_MonadState_419) {
            return function (f) {
                return state(__dict_MonadState_419)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_420) {
        return function (__dict_MonadState_421) {
            return state(__dict_MonadState_421)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        get: get, 
        gets: gets, 
        modify: modify, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateRWST: monadStateRWST, 
        monadStateReaderT: monadStateReaderT, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateWriterT: monadStateWriterT, 
        put: put, 
        state: state
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Data_Tuple = PS.Data_Tuple;
    function MonadWriter(listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_422) {
        return function (__dict_Monad_423) {
            return function (__dict_MonadWriter_424) {
                return function (w) {
                    return writer(__dict_MonadWriter_424)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_425) {
        return function (__dict_Monad_426) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_426["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_31) {
                    return Prelude["return"](__dict_Monad_426)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_31.value0, _31.value1), _31.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_426["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_32) {
                    return Prelude["return"](__dict_Monad_426)(new Data_Tuple.Tuple(_32.value0.value0, _32.value0.value1(_32.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Trans.WriterT.create)(Prelude["return"](__dict_Monad_426)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_427) {
        return function (__dict_Monoid_428) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_427), Control_Monad_RWS.pass(__dict_Monad_427), Control_Monad_RWS.writer(__dict_Monad_427["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_429) {
        return function (__dict_Monad_430) {
            return function (__dict_MonadWriter_431) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_430["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_431)(m))(function (_29) {
                            return Prelude["return"](__dict_Monad_430)(new Data_Tuple.Tuple(_29.value0, f(_29.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_432) {
        return function (__dict_Error_433) {
            return function (__dict_MonadWriter_434) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_432)(listen(__dict_MonadWriter_434)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_432)(pass(__dict_MonadWriter_434)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_433))(__dict_Monad_432)(writer(__dict_MonadWriter_434)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_435) {
        return function (__dict_MonadWriter_436) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_435)(listen(__dict_MonadWriter_436)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_435)(pass(__dict_MonadWriter_436)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_435)(writer(__dict_MonadWriter_436)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_437) {
        return function (__dict_MonadWriter_438) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_438)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_438)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_437)(writer(__dict_MonadWriter_438)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_439) {
        return function (__dict_MonadWriter_440) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_439)(listen(__dict_MonadWriter_440)), Control_Monad_State_Trans.liftPassState(__dict_Monad_439)(pass(__dict_MonadWriter_440)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_439)(writer(__dict_MonadWriter_440)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_441) {
        return function (__dict_Monad_442) {
            return function (__dict_MonadWriter_443) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_443)(Prelude[">>="](__dict_Monad_442["__superclass_Prelude.Bind_1"]())(m)(function (_30) {
                            return Prelude["return"](__dict_Monad_442)(new Data_Tuple.Tuple(_30, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listen: listen, 
        listens: listens, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterRWST: monadWriterRWST, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterWriterT: monadWriterWriterT, 
        pass: pass, 
        tell: tell, 
        writer: writer
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadRWS(__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_444) {
        return function (__dict_Monoid_445) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_444)(__dict_Monoid_445);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_444)(__dict_Monoid_445);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_444)(__dict_Monoid_445);
            }, function () {
                return __dict_Monoid_445;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_444)(__dict_Monoid_445);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_446) {
        return function (__dict_Monoid_447) {
            return function (__dict_MonadRWS_448) {
                return function (__dict_MonadReader_449) {
                    return function (__dict_MonadWriter_450) {
                        return function (__dict_MonadState_451) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_446)(__dict_MonadReader_449);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_446)(__dict_MonadState_451);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_446)(__dict_MonadWriter_450);
                            }, function () {
                                return __dict_Monoid_447;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_446);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_452) {
        return function (__dict_Monoid_453) {
            return function (__dict_MonadRWS_454) {
                return function (__dict_MonadReader_455) {
                    return function (__dict_MonadWriter_456) {
                        return function (__dict_MonadState_457) {
                            return function (__dict_Error_458) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_452)(__dict_Error_458)(__dict_MonadReader_455);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_452)(__dict_Error_458)(__dict_MonadState_457);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_452)(__dict_Error_458)(__dict_MonadWriter_456);
                                }, function () {
                                    return __dict_Monoid_453;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_452)(__dict_Error_458);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT, 
        monadRWSRWST: monadRWSRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Prelude = PS.Prelude;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        runReader: runReader, 
        withReader: withReader
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        evalState: evalState, 
        execState: execState, 
        mapState: mapState, 
        runState: runState, 
        withState: withState
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        execWriter: execWriter, 
        mapWriter: mapWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Data_Lazy_List = (function () {
    "use strict";
    var Data_Lazy = PS.Data_Lazy;
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    function Nil() {

    };
    Nil.value = new Nil();
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    function showItems (l) {  return l.join(', ');};
    var $less$dot$greater = function (_398) {
        return function (_399) {
            if (_398 instanceof Nil) {
                return Data_Lazy.force(_399);
            };
            if (_398 instanceof Cons) {
                return new Cons(_398.value0, Prelude["<$>"](Data_Lazy.functorLazy)(function (xs$prime) {
                    return $less$dot$greater(xs$prime)(_399);
                })(_398.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var toArray = function (_400) {
        if (_400 instanceof Nil) {
            return [  ];
        };
        if (_400 instanceof Cons) {
            return Prelude[":"](_400.value0)(toArray(Data_Lazy.force(_400.value1)));
        };
        throw new Error("Failed pattern match");
    };
    var take = function (_402) {
        return function (_403) {
            if (_402 < 1) {
                return Nil.value;
            };
            if (_403 instanceof Nil) {
                return Nil.value;
            };
            if (_403 instanceof Cons) {
                return new Cons(_403.value0, Data_Lazy.defer(function (_) {
                    return take(_402 - 1)(Data_Lazy.force(_403.value1));
                }));
            };
            throw new Error("Failed pattern match");
        };
    };
    var showList = function (__dict_Show_459) {
        return new Prelude.Show(function (l) {
            return "List(" + (showItems(Data_Array.map(Prelude.show(__dict_Show_459))(toArray(l))) + ")");
        });
    };
    var semigroupList = new Prelude.Semigroup(function (xs) {
        return function (ys) {
            return $less$dot$greater(xs)(Data_Lazy.defer(function (_) {
                return ys;
            }));
        };
    });
    var repeat = function (x) {
        return new Cons(x, Data_Lazy.defer(function (_) {
            return repeat(x);
        }));
    };
    var monoidList = new Data_Monoid.Monoid(function () {
        return semigroupList;
    }, Nil.value);
    var functorList = new Prelude.Functor(function (_408) {
        return function (_409) {
            if (_409 instanceof Nil) {
                return Nil.value;
            };
            if (_409 instanceof Cons) {
                return new Cons(_408(_409.value0), Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorList)(_408))(_409.value1));
            };
            throw new Error("Failed pattern match");
        };
    });
    var fromArray = function (_401) {
        if (_401.length === 0) {
            return Nil.value;
        };
        if (_401.length >= 1) {
            var _1297 = _401.slice(1);
            return new Cons(_401[0], Data_Lazy.defer(function (_) {
                return fromArray(_1297);
            }));
        };
        throw new Error("Failed pattern match");
    };
    var eqList = function (__dict_Eq_460) {
        return new Prelude.Eq(function (l) {
            return function (l$prime) {
                return !Prelude["=="](eqList(__dict_Eq_460))(l)(l$prime);
            };
        }, function (_406) {
            return function (_407) {
                if (_406 instanceof Nil && _407 instanceof Nil) {
                    return true;
                };
                if (_406 instanceof Cons && _407 instanceof Cons) {
                    return Prelude["=="](__dict_Eq_460)(_406.value0)(_407.value0) && Prelude["=="](eqList(__dict_Eq_460))(Data_Lazy.force(_406.value1))(Data_Lazy.force(_407.value1));
                };
                return false;
            };
        });
    };
    var drop = function (__copy__404) {
        return function (__copy__405) {
            var _404 = __copy__404;
            var _405 = __copy__405;
            tco: while (true) {
                if (_404 < 1) {
                    return _405;
                };
                if (_405 instanceof Nil) {
                    return Nil.value;
                };
                if (_405 instanceof Cons) {
                    var __tco__404 = _404 - 1;
                    var __tco__405 = Data_Lazy.force(_405.value1);
                    _404 = __tco__404;
                    _405 = __tco__405;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var monadList = new Prelude.Monad(function () {
        return applicativeList;
    }, function () {
        return bindList;
    });
    var bindList = new Prelude.Bind(function (_410) {
        return function (_411) {
            if (_410 instanceof Nil) {
                return Nil.value;
            };
            if (_410 instanceof Cons) {
                return $less$dot$greater(_411(_410.value0))(Prelude["<$>"](Data_Lazy.functorLazy)(function (xs$prime) {
                    return Prelude[">>="](bindList)(xs$prime)(_411);
                })(_410.value1));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyList;
    });
    var applyList = new Prelude.Apply(Prelude.ap(monadList), function () {
        return functorList;
    });
    var applicativeList = new Prelude.Applicative(function () {
        return applyList;
    }, function (x) {
        return new Cons(x, Data_Lazy.defer(function (_) {
            return Nil.value;
        }));
    });
    return {
        Cons: Cons, 
        Nil: Nil, 
        applicativeList: applicativeList, 
        applyList: applyList, 
        bindList: bindList, 
        drop: drop, 
        eqList: eqList, 
        fromArray: fromArray, 
        functorList: functorList, 
        monadList: monadList, 
        monoidList: monoidList, 
        repeat: repeat, 
        semigroupList: semigroupList, 
        showList: showList, 
        take: take, 
        toArray: toArray
    };
})();
